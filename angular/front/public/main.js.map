{"version":3,"sources":["./src/app/acoes/acoes.component.html","./src/app/admin/admin.component.html","./src/app/app.component.html","./src/app/brokerages/brokerages.component.html","./src/app/brokerages/create-brokerage/create-brokerage.component.html","./src/app/brokerages/edit-brokerage/edit-brokerage.component.html","./src/app/company/company.component.html","./src/app/company/create-company/create-company.component.html","./src/app/company/edit-company/edit-company.component.html","./src/app/components/navbar/navbar.component.html","./src/app/components/sidebar/sidebar.component.html","./src/app/emolumentos/emolumentos.component.html","./src/app/home/home.component.html","./src/app/layouts/admin-layout/admin-layout.component.html","./src/app/login/login.component.html","./src/app/sector/sector.component.html","./src/app/user-profile/user-profile.component.html","./src/app/wallet/create-wallet/create-wallet.component.html","./src/app/wallet/edit-wallet/edit-wallet.component.html","./src/app/wallet/wallet.component.html","./src/$_lazy_route_resource lazy namespace object","./src/app/_helpers/auth.guard.ts","./src/app/_helpers/error.interceptor.ts","./src/app/_helpers/fake-backend.ts","./src/app/_helpers/index.ts","./src/app/_helpers/jwt.interceptor.ts","./src/app/_models/index.ts","./src/app/_models/role.ts","./src/app/_models/user.ts","./src/app/_services/authentication.service.ts","./src/app/_services/index.ts","./src/app/_services/user.service.ts","./src/app/acoes/acoes.component.ts","./src/app/acoes/acoes.service.ts","./src/app/admin/admin.component.ts","./src/app/admin/index.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/brokerages/brokerage.model.ts","./src/app/brokerages/brokerages.component.css","./src/app/brokerages/brokerages.component.ts","./src/app/brokerages/brokerages.service.ts","./src/app/brokerages/create-brokerage/create-brokerage.component.css","./src/app/brokerages/create-brokerage/create-brokerage.component.ts","./src/app/brokerages/edit-brokerage/edit-brokerage.component.css","./src/app/brokerages/edit-brokerage/edit-brokerage.component.ts","./src/app/company/company.component.ts","./src/app/company/company.service.ts","./src/app/company/create-company/create-company.component.css","./src/app/company/create-company/create-company.component.ts","./src/app/company/edit-company/edit-company.component.css","./src/app/company/edit-company/edit-company.component.ts","./src/app/components/navbar/navbar.component.css","./src/app/components/navbar/navbar.component.ts","./src/app/components/sidebar/sidebar.component.css","./src/app/components/sidebar/sidebar.component.ts","./src/app/emolumentos/emolumentos.component.ts","./src/app/emolumentos/emolumentos.service.ts","./src/app/emolumentos/index.ts","./src/app/home/home.component.ts","./src/app/home/index.ts","./src/app/layouts/admin-layout/admin-layout.component.scss","./src/app/layouts/admin-layout/admin-layout.component.ts","./src/app/login/index.ts","./src/app/login/login.component.ts","./src/app/sector/sector.component.css","./src/app/sector/sector.component.ts","./src/app/sector/sector.service.ts","./src/app/user-profile/user-profile.component.ts","./src/app/wallet/create-wallet/create-wallet.component.ts","./src/app/wallet/edit-wallet/edit-wallet.component.ts","./src/app/wallet/wallet.component.ts","./src/app/wallet/wallet.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export default \"<a class=\\\"nav-item nav-link\\\" routerLink=\\\"create-brokerage\\\">Novo\\n    <span class=\\\"material-icons\\\">add_comment</span></a>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body table-responsive\\\">\\n                <div *ngIf='showSpinner' class=\\\"spinner-grow text-danger\\\" role=\\\"status\\\">\\n                    <span class=\\\"sr-only\\\"></span>\\n                </div>\\n                <div *ngIf='showSpinner' class=\\\"spinner-grow text-primary\\\" role=\\\"status\\\">\\n                    <span class=\\\"sr-only\\\">Loading...</span>\\n                </div>\\n                <div *ngIf='showSpinner' class=\\\"spinner-grow text-secondary\\\" role=\\\"status\\\">\\n                    <span class=\\\"sr-only\\\">Loading...</span>\\n                </div>\\n                <div *ngIf='showSpinner' class=\\\"spinner-grow text-success\\\" role=\\\"status\\\">\\n                    <span class=\\\"sr-only\\\">Loading...</span>\\n                </div>\\n                <div *ngIf='showSpinner' class=\\\"spinner-grow text-danger\\\" role=\\\"status\\\">\\n                    <span class=\\\"sr-only\\\">Loading...</span>\\n                </div>\\n                <div *ngIf='showSpinner' class=\\\"spinner-grow text-warning\\\" role=\\\"status\\\">\\n                    <span class=\\\"sr-only\\\">Loading...</span>\\n                </div>\\n                <div *ngIf='showSpinner' class=\\\"spinner-grow text-info\\\" role=\\\"status\\\">\\n                    <span class=\\\"sr-only\\\">Loading...</span>\\n                </div>\\n                <div *ngIf='showSpinner' class=\\\"spinner-grow text-light\\\" role=\\\"status\\\">\\n                    <span class=\\\"sr-only\\\">Loading...</span>\\n                </div>\\n                <div *ngIf='showSpinner' class=\\\"spinner-grow text-dark\\\" role=\\\"status\\\">\\n                    <span class=\\\"sr-only\\\">Loading...</span>\\n                </div>\\n                <form class=\\\"navbar-form\\\">\\n                    <h1><span class=\\\"alert\\\">{{texto}}</span></h1>\\n                    <div class=\\\"input-group no-border\\\">\\n                        <input (keyup)=\\\"mudaTermo()\\\"\\n                               placeholder=\\\"Digite o nome desejado...\\\"\\n                               (keyup.enter)=\\\"onSearch()\\\"\\n                               type=\\\"text\\\"\\n                               id=\\\"pesquisar\\\"\\n                               name=\\\"pesquisar\\\"\\n                               class=\\\"form-control\\\"\\n                               [formControl]=\\\"queryField\\\">\\n                        <button (click)=\\\"onSearch()\\\"\\n                                class=\\\"btn btn-white btn-round btn-just-icon\\\">\\n                            <i class=\\\"material-icons\\\">search</i>\\n                            <div class=\\\"ripple-container\\\"></div>\\n                        </button>\\n                    </div>\\n                </form>\\n\\n                <form class=\\\"table-wrapper-scroll-y my-custom-scrollbar\\\">\\n                    <table class=\\\"table table-hover\\\" class=\\\"table table-bordered table-striped mb-0\\\">\\n                        <thead class=\\\"text-warning\\\">\\n                        <tr>\\n                            <th scope=\\\"col\\\">negotiation</th>\\n                            <th scope=\\\"col\\\">records</th>\\n                            <th scope=\\\"col\\\">saleoff</th>\\n                            <th scope=\\\"col\\\">totalCustos</th>\\n                            <th scope=\\\"col\\\">walletFk</th>\\n                        </tr>\\n                        </thead>\\n                        <tbody>\\n                        <tr *ngFor=\\\"let acoes of results$ | async\\\">\\n                            <td>{{ acoes.negotiation }}</td>\\n                            <td>{{ acoes.records }}</td>\\n                            <td>{{ acoes.saleoff }}</td>\\n                            <td>{{ acoes.totalCustos }}</td>\\n                            <td>{{ acoes.walletFk }}</td>\\n                            <td class=\\\"td-actions text-right\\\">\\n                                <button [routerLink]=\\\"['/edit-acoes', acoes.id]\\\"\\n                                        class=\\\"btn btn-primary btn-link btn-sm btn-just-icon\\\" mat-raised-button\\n                                        matTooltip=\\\"Editar Corretora\\\" routerLinkActive=\\\"active\\\"\\n                                        type=\\\"button\\\">\\n                                    <i class=\\\"material-icons\\\">edit</i>\\n                                </button>\\n                                <button routerLink=\\\"/create-company\\\"\\n                                        routerLinkActive=\\\"active\\\"\\n                                        mat-raised-button type=\\\"button\\\"\\n                                        class=\\\"btn btn-danger btn-link btn-sm btn-just-icon\\\">\\n                                    <i class=\\\"material-icons\\\">close</i>\\n                                </button>\\n                            </td>\\n                        </tr>\\n                        </tbody>\\n                    </table>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<!--GRID PERMANENTE-->\\n<form class=\\\"table-wrapper-scroll-y my-custom-scrollbar\\\">\\n    <table class=\\\"table table-hover\\\" class=\\\"table table-bordered table-striped mb-0\\\">\\n        <thead class=\\\"text-warning\\\">\\n        <tr>\\n        </tr>\\n        </thead>\\n        <tbody>\\n        <tr *ngFor=\\\"let acoes of responseAcoes\\\">\\n            <td>{{ acoes.negotiation }}</td>\\n            <td>{{ acoes.records }}</td>\\n            <td>{{ acoes.saleoff }}</td>\\n            <td>{{ acoes.totalCustos }}</td>\\n            <td>{{ acoes.walletFk }}</td>\\n            <td class=\\\"td-actions text-right\\\">\\n                <button [routerLink]=\\\"['/edit-acoes', acoes.id]\\\"\\n                        class=\\\"btn btn-primary btn-link btn-sm btn-just-icon\\\" mat-raised-button\\n                        matTooltip=\\\"Editar Corretora\\\" routerLinkActive=\\\"active\\\"\\n                        type=\\\"button\\\">\\n                    <i class=\\\"material-icons\\\">edit</i>\\n                </button>\\n                <button routerLink=\\\"/create-company\\\"\\n                        routerLinkActive=\\\"active\\\"\\n                        mat-raised-button type=\\\"button\\\"\\n                        class=\\\"btn btn-danger btn-link btn-sm btn-just-icon\\\">\\n                    <i class=\\\"material-icons\\\">close</i>\\n                </button>\\n        </tr>\\n        </tbody>\\n    </table>\\n</form>\\n\"","export default \"<a class=\\\"nav-item nav-link\\\" routerLink=\\\"create-brokerage\\\">Novo\\n    <span class=\\\"material-icons\\\">add_comment</span></a>\\n<div class=\\\"card mt-4\\\">\\n    <h4 class=\\\"card-header\\\">Admin</h4>\\n    <div class=\\\"card-body\\\">\\n        <div *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm\\\"></div>\\n        <ul *ngIf=\\\"users\\\">\\n            <li *ngFor=\\\"let user of users\\\">{{user.firstName}} {{user.lastName}}</li>\\n        </ul>\\n    </div>\\n</div>\\n\\n\"","export default \"<!-- nav -->\\r\\n<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\" *ngIf=\\\"user\\\">\\r\\n    <button class=\\\"navbar-toggler\\\"\\r\\n            type=\\\"button\\\"\\r\\n            data-toggle=\\\"collapse\\\"\\r\\n            data-target=\\\"#navbarNavDropdown\\\"\\r\\n            aria-controls=\\\"navbarNavDropdown\\\"\\r\\n            aria-expanded=\\\"false\\\"\\r\\n            aria-label=\\\"Toggle navigation\\\">\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNavDropdown\\\">\\r\\n        <a class=\\\"nav-item nav-link\\\" routerLink=\\\"/\\\">Home<span class=\\\"material-icons\\\">home_work</span></a>\\r\\n        <a class=\\\"nav-item nav-link\\\" routerLink=\\\"/acoes\\\">Ações<span class=\\\"material-icons\\\">format_shapes</span></a>\\r\\n        <a class=\\\"nav-item nav-link\\\" routerLink=\\\"/emolumentos\\\">Emolumentos<span class=\\\"material-icons\\\">account_tree</span></a>\\r\\n        <a class=\\\"nav-item nav-link\\\" routerLink=\\\"/brokerages\\\">Brokerages<span class=\\\"material-icons\\\">dialpad</span></a>\\r\\n        <a class=\\\"nav-item nav-link\\\" routerLink=\\\"/company\\\">Empresas<span class=\\\"material-icons\\\">work</span></a>\\r\\n        <a class=\\\"nav-item nav-link\\\" routerLink=\\\"/wallet\\\">Carteiras<span class=\\\"material-icons\\\">attach_money</span></a>\\r\\n        <a class=\\\"nav-item nav-link\\\" routerLink=\\\"/user\\\">User<span class=\\\"material-icons\\\">people_alt</span></a>\\r\\n        <a class=\\\"nav-item nav-link\\\" routerLink=\\\"/admin\\\" *ngIf=\\\"isAdmin\\\">Admin<span class=\\\"material-icons\\\">adb</span></a>\\r\\n        <a class=\\\"nav-item nav-link\\\" (click)=\\\"logout()\\\">Logout<span class=\\\"material-icons\\\">double_arrow</span></a>\\r\\n </div>\\r\\n</nav>\\r\\n<!-- main app container -->\\r\\n<div class=\\\"container\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n</div>\\r\\n\"","export default \"<a class=\\\"nav-item nav-link\\\" routerLink=\\\"/create-brokerage\\\">Novo\\r\\n    <span class=\\\"material-icons\\\">add_comment</span></a>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-body table-responsive\\\">\\r\\n                <div *ngIf='showSpinner' class=\\\"spinner-grow text-danger\\\" role=\\\"status\\\">\\r\\n                    <span class=\\\"sr-only\\\"></span>\\r\\n                </div>\\r\\n                <div *ngIf='showSpinner' class=\\\"spinner-grow text-primary\\\" role=\\\"status\\\">\\r\\n                    <span class=\\\"sr-only\\\">Loading...</span>\\r\\n                </div>\\r\\n                <div *ngIf='showSpinner' class=\\\"spinner-grow text-secondary\\\" role=\\\"status\\\">\\r\\n                    <span class=\\\"sr-only\\\">Loading...</span>\\r\\n                </div>\\r\\n                <div *ngIf='showSpinner' class=\\\"spinner-grow text-success\\\" role=\\\"status\\\">\\r\\n                    <span class=\\\"sr-only\\\">Loading...</span>\\r\\n                </div>\\r\\n                <div *ngIf='showSpinner' class=\\\"spinner-grow text-danger\\\" role=\\\"status\\\">\\r\\n                    <span class=\\\"sr-only\\\">Loading...</span>\\r\\n                </div>\\r\\n                <div *ngIf='showSpinner' class=\\\"spinner-grow text-warning\\\" role=\\\"status\\\">\\r\\n                    <span class=\\\"sr-only\\\">Loading...</span>\\r\\n                </div>\\r\\n                <div *ngIf='showSpinner' class=\\\"spinner-grow text-info\\\" role=\\\"status\\\">\\r\\n                    <span class=\\\"sr-only\\\">Loading...</span>\\r\\n                </div>\\r\\n                <div *ngIf='showSpinner' class=\\\"spinner-grow text-light\\\" role=\\\"status\\\">\\r\\n                    <span class=\\\"sr-only\\\">Loading...</span>\\r\\n                </div>\\r\\n                <div *ngIf='showSpinner' class=\\\"spinner-grow text-dark\\\" role=\\\"status\\\">\\r\\n                    <span class=\\\"sr-only\\\">Loading...</span>\\r\\n                </div>\\r\\n                <form class=\\\"navbar-form\\\">\\r\\n                    <h1><span class=\\\"alert\\\">{{texto}}</span></h1>\\r\\n                    <div class=\\\"input-group no-border\\\">\\r\\n                        <input (keyup)=\\\"mudaTermo()\\\" placeholder=\\\"Digite uma corretora desejado...\\\" value=\\\"\\\"\\r\\n                               (keyup.enter)=\\\"onSearch()\\\"\\r\\n                               type=\\\"text\\\"\\r\\n                               id=\\\"pesquisar\\\"\\r\\n                               name=\\\"pesquisar\\\"\\r\\n                               class=\\\"form-control\\\"\\r\\n                               [formControl]=\\\"queryField\\\">\\r\\n                        <button (click)=\\\"onSearch()\\\" class=\\\"btn btn-white btn-round btn-just-icon\\\">\\r\\n                            <i class=\\\"material-icons\\\">search</i>\\r\\n                            <div class=\\\"ripple-container\\\"></div>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </form>\\r\\n                <form>\\r\\n                    <table class=\\\"table table-hover\\\">\\r\\n                        <thead class=\\\"text-warning\\\">\\r\\n                        <tr>\\r\\n                            <th scope=\\\"col\\\">Nome</th>\\r\\n                            <th scope=\\\"col\\\">CNPJ</th>\\r\\n                            <th scope=\\\"col\\\">Tipo</th>\\r\\n                            <th scope=\\\"col\\\">Day Trade</th>\\r\\n                            <th scope=\\\"col\\\">Swing Trade</th>\\r\\n                            <th scope=\\\"col\\\">ISS</th>\\r\\n                            <th scope=\\\"col\\\">Valor(Day)</th>\\r\\n                            <th scope=\\\"col\\\">Valor(Swing)</th>\\r\\n                            <th scope=\\\"col\\\">Status</th>\\r\\n                            <th scope=\\\"col\\\"></th>\\r\\n                        </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                        <!--| slice:0:10-->\\r\\n                        <tr *ngFor=\\\"let brokerage of results$ | async\\\">\\r\\n                            <td>{{ brokerage.name }}</td>\\r\\n                            <td>{{ brokerage.cnpj }}</td>\\r\\n                            <td>{{ brokerage.tipo }}</td>\\r\\n                            <td class=\\\"text-info\\\">R{{ brokerage.dayTrade | currency }}</td>\\r\\n                            <td class=\\\"text-success\\\">R{{ brokerage.swingTrade | currency }}</td>\\r\\n                            <td *ngIf=\\\"brokerage.iss > 5\\\">\\r\\n                        <span class=\\\"text-success\\\">\\r\\n                        <i class=\\\"fa fa-long-arrow-up\\\"></i>{{ brokerage.iss }} %\\r\\n                        </span>\\r\\n                            </td>\\r\\n                            <td class=\\\"text-danger\\\" *ngIf=\\\"brokerage.iss <= 5\\\">\\r\\n                                <i class=\\\"fa fa-long-arrow-down\\\"></i>{{ brokerage.iss }} %\\r\\n                            </td>\\r\\n                            <td class=\\\"text-info\\\" *ngIf=\\\"brokerage.dayTrade > 0\\\">\\r\\n                                R{{ brokerage.dayTrade * brokerage.iss / 100 | currency }}\\r\\n                            </td>\\r\\n                            <td class=\\\"text-danger\\\" *ngIf=\\\"brokerage.dayTrade <= 0\\\">\\r\\n                          <span class=\\\"material-icons\\\">\\r\\n                            thumb_down_alt\\r\\n                          </span>\\r\\n                            </td>\\r\\n                            <td *ngIf=\\\"brokerage.swingTrade > 0\\\">\\r\\n                                <span class=\\\"material-icons\\\">attach_money</span>\\r\\n                                <span class=\\\"text-success\\\">\\r\\n                         R{{ brokerage.swingTrade * brokerage.iss / 100 | currency }}\\r\\n                        </span>\\r\\n                            </td>\\r\\n                            <td *ngIf=\\\"brokerage.swingTrade <= 0\\\">\\r\\n                                <span class=\\\"material-icons\\\">attach_money</span>\\r\\n                                <span class=\\\"text-danger\\\">\\r\\n                         <span class=\\\"material-icons\\\">\\r\\n                            thumb_down_alt\\r\\n                        </span>\\r\\n                        </span>\\r\\n                            </td>\\r\\n                            <td *ngIf=\\\"brokerage.status == 'INATIVO'\\\">\\r\\n                                <button\\r\\n                                        mat-rais ed-button\\r\\n                                        type=\\\"button\\\"\\r\\n                                        class=\\\"btn btn-danger btn-link btn-sm btn-just-icon\\\">\\r\\n                                    <i class=\\\"material-icons\\\">warning</i>\\r\\n                                </button>\\r\\n                            </td>\\r\\n                            <td *ngIf=\\\"brokerage.status == 'ATIVO'\\\">\\r\\n                                <button mat-raised-button\\r\\n                                        type=\\\"button\\\"\\r\\n                                        class=\\\"btn  btn-link btn-sm btn-just-icon\\\">\\r\\n                          <span class=\\\"text-success\\\">\\r\\n                          <i class=\\\"material-icons\\\">done_all</i></span>\\r\\n                                </button>\\r\\n                            </td>\\r\\n                            <td class=\\\"td-actions text-right\\\">\\r\\n                                <button [routerLink]=\\\"['/edit-brokerage', brokerage.id]\\\"\\r\\n                                        class=\\\"btn btn-primary btn-link btn-sm btn-just-icon\\\" mat-raised-button\\r\\n                                        matTooltip=\\\"Editar Corretora\\\" routerLinkActive=\\\"active\\\"\\r\\n                                        type=\\\"button\\\">\\r\\n                                    <i class=\\\"material-icons\\\">edit</i>\\r\\n                                </button>\\r\\n                                <button routerLink=\\\"/create-brokerage\\\"\\r\\n                                        routerLinkActive=\\\"active\\\"\\r\\n                                        mat-raised-button type=\\\"button\\\"\\r\\n                                        class=\\\"btn btn-danger btn-link btn-sm btn-just-icon\\\">\\r\\n                                    <i class=\\\"material-icons\\\">close</i>\\r\\n                                </button>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<!--GRID PERMANENTE-->\\r\\n<form class=\\\"table-wrapper-scroll-y my-custom-scrollbar\\\">\\r\\n    <table class=\\\"table table-hover\\\" class=\\\"table table-bordered table-striped mb-0\\\">\\r\\n        <thead class=\\\"text-warning\\\">\\r\\n        <tr>\\r\\n            <th scope=\\\"col\\\"></th>\\r\\n            <th scope=\\\"col\\\"></th>\\r\\n            <th scope=\\\"col\\\"></th>\\r\\n            <th scope=\\\"col\\\"></th>\\r\\n            <th scope=\\\"col\\\"></th>\\r\\n            <th scope=\\\"col\\\"></th>\\r\\n            <th scope=\\\"col\\\"></th>\\r\\n            <th scope=\\\"col\\\"></th>\\r\\n            <th scope=\\\"col\\\"></th>\\r\\n            <th scope=\\\"col\\\"></th>\\r\\n        </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n        <!--<tr *ngFor=\\\"let brokerage of responseBrokerages;\\r\\n        let i = index\\\" [class.active]=\\\"i == currentIndex\\\" (click)=\\\"setActiveBrokerage(brokerage, i)\\\">\\r\\n-->\\r\\n        <tr *ngFor=\\\"let brokerage of responseBrokerages\\\">\\r\\n            <td>{{ brokerage.name }}</td>\\r\\n            <td>{{ brokerage.cnpj }}</td>\\r\\n            <td>{{ brokerage.tipo }}</td>\\r\\n            <td class=\\\"text-info\\\">R{{ brokerage.dayTrade | currency }}</td>\\r\\n            <td class=\\\"text-success\\\">R{{ brokerage.swingTrade | currency }}</td>\\r\\n            <td *ngIf=\\\"brokerage.iss > 5\\\">\\r\\n                        <span class=\\\"text-success\\\">\\r\\n                        <i class=\\\"fa fa-long-arrow-up\\\"></i>{{ brokerage.iss }} %\\r\\n                        </span>\\r\\n            </td>\\r\\n            <td class=\\\"text-danger\\\" *ngIf=\\\"brokerage.iss <= 5\\\">\\r\\n                <i class=\\\"fa fa-long-arrow-down\\\"></i>{{ brokerage.iss }} %\\r\\n            </td>\\r\\n            <td class=\\\"text-info\\\" *ngIf=\\\"brokerage.dayTrade > 0\\\">\\r\\n                R{{ brokerage.dayTrade * brokerage.iss / 100 | currency }}\\r\\n            </td>\\r\\n            <td class=\\\"text-danger\\\" *ngIf=\\\"brokerage.dayTrade <= 0\\\">\\r\\n                          <span class=\\\"material-icons\\\">\\r\\n                            thumb_down_alt\\r\\n                          </span>\\r\\n            </td>\\r\\n            <td *ngIf=\\\"brokerage.swingTrade > 0\\\">\\r\\n                <span class=\\\"material-icons\\\">attach_money</span>\\r\\n                <span class=\\\"text-success\\\">\\r\\n                         R{{ brokerage.swingTrade * brokerage.iss / 100 | currency }}\\r\\n                        </span>\\r\\n            </td>\\r\\n            <td *ngIf=\\\"brokerage.swingTrade <= 0\\\">\\r\\n                <span class=\\\"material-icons\\\">attach_money</span>\\r\\n                <span class=\\\"text-danger\\\">\\r\\n                         <span class=\\\"material-icons\\\">\\r\\n                            thumb_down_alt\\r\\n                        </span>\\r\\n                        </span>\\r\\n            </td>\\r\\n\\r\\n            <td *ngIf=\\\"brokerage.status == 'INATIVO'\\\">\\r\\n                <button\\r\\n                        mat-rais ed-button\\r\\n                        type=\\\"button\\\"\\r\\n                        class=\\\"btn btn-danger btn-link btn-sm btn-just-icon\\\">\\r\\n                    <i class=\\\"material-icons\\\">warning</i>\\r\\n                </button>\\r\\n            </td>\\r\\n            <td *ngIf=\\\"brokerage.status == 'ATIVO'\\\">\\r\\n                <button mat-raised-button\\r\\n                        type=\\\"button\\\"\\r\\n                        class=\\\"btn  btn-link btn-sm btn-just-icon\\\">\\r\\n                          <span class=\\\"text-success\\\">\\r\\n                          <i class=\\\"material-icons\\\">done_all</i></span>\\r\\n              </button>\\r\\n              <button [routerLink]=\\\"['/edit-brokerage', brokerage.id]\\\"\\r\\n                        class=\\\"btn btn-primary btn-link btn-sm btn-just-icon\\\" mat-raised-button\\r\\n                        matTooltip=\\\"Editar Corretora\\\" routerLinkActive=\\\"active\\\"\\r\\n                        type=\\\"button\\\">\\r\\n                    <i class=\\\"material-icons\\\">edit</i>\\r\\n              </button>\\r\\n           </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n</form>\\r\\n\\r\\n\\r\\n\"","export default \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header card-header-danger\\\">\\r\\n                <p class=\\\"card-category\\\"></p>\\r\\n                <h4 class=\\\"card-title\\\">Cadastrar Corretora</h4>\\r\\n             </div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <form class=\\\"form-group\\\" [formGroup]=\\\"brokerageForm\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-5\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Nome</label>\\r\\n                                <input type=\\\"text\\\"\\r\\n                                       class=\\\"form-control\\\"\\r\\n                                       id=\\\"name\\\"\\r\\n                                       formControlName=\\\"name\\\"\\r\\n                                       [(ngModel)]=\\\"request.name\\\"\\r\\n                                       name=\\\"name\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-3\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">CNPJ</label>\\r\\n                                <input type=\\\"text\\\"\\r\\n                                       class=\\\"form-control\\\"\\r\\n                                       id=\\\"cnpj\\\"\\r\\n                                       formControlName=\\\"cnpj\\\"\\r\\n                                       [(ngModel)]=\\\"request.cnpj\\\"\\r\\n                                       name=\\\"cnpj\\\"></div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Endereço</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"address\\\"\\r\\n                                       formControlName=\\\"address\\\"\\r\\n                                       [(ngModel)]=\\\"request.address\\\"\\r\\n                                       name=\\\"address\\\"></div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n <!--linha 2-->\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-5\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Bairro</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                       id=\\\"addressNeighborhood\\\"\\r\\n                                       formControlName=\\\"addressNeighborhood\\\"\\r\\n                                       [(ngModel)]=\\\"request.addressNeighborhood\\\"\\r\\n                                       name=\\\"addressNeighborhood\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-3\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Cidade</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                       id=\\\"addressCity\\\"\\r\\n                                       formControlName=\\\"addressCity\\\"\\r\\n                                       [(ngModel)]=\\\"request.addressCity\\\"\\r\\n                                       name=\\\"addressCity\\\"></div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Estado</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                       id=\\\"addressState\\\"\\r\\n                                       formControlName=\\\"addressState\\\"\\r\\n                                       [(ngModel)]=\\\"request.addressState\\\"\\r\\n                                       name=\\\"addressState\\\"></div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--linha 2-->\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-5\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Swing Trade</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                       id=\\\"swingTrade\\\"\\r\\n                                       formControlName=\\\"swingTrade\\\"\\r\\n                                       [(ngModel)]=\\\"request.swingTrade\\\"\\r\\n                                       name=\\\"swingTrade\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-3\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Tipo</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                       id=\\\"tipo\\\"\\r\\n                                       formControlName=\\\"tipo\\\"\\r\\n                                       [(ngModel)]=\\\"request.tipo\\\"\\r\\n                                       name=\\\"tipo\\\"></div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Day Trade</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                       id=\\\"dayTrade\\\"\\r\\n                                       formControlName=\\\"dayTrade\\\"\\r\\n                                       [(ngModel)]=\\\"request.dayTrade\\\"\\r\\n                                       name=\\\"dayTrade\\\"></div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--linha 3-->\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-5\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">ISS</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                       id=\\\"iss\\\"\\r\\n                                       formControlName=\\\"iss\\\"\\r\\n                                       [(ngModel)]=\\\"request.iss\\\"\\r\\n                                       name=\\\"iss\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-3\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Telefone</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                       id=\\\"phone\\\"\\r\\n                                       formControlName=\\\"phone\\\"\\r\\n                                       [(ngModel)]=\\\"request.phone\\\"\\r\\n                                       name=\\\"phone\\\"></div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Web Site</label>\\r\\n                                <input type=\\\"text\\\"\\r\\n                                       class=\\\"form-control\\\"\\r\\n                                       id=\\\"website\\\"\\r\\n                                       formControlName=\\\"website\\\"\\r\\n                                       [(ngModel)]=\\\"request.website\\\"\\r\\n                                       name=\\\"website\\\"></div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--linha 4-->\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-5\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Email</label>\\r\\n                                <input type=\\\"text\\\"\\r\\n                                       class=\\\"form-control\\\"\\r\\n                                       id=\\\"email\\\"\\r\\n                                       formControlName=\\\"email\\\"\\r\\n                                       [(ngModel)]=\\\"request.email\\\"\\r\\n                                       name=\\\"email\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-3\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">logo</label>\\r\\n                                <input type=\\\"text\\\"\\r\\n                                       class=\\\"form-control\\\"\\r\\n                                       formControlName=\\\"logo\\\"\\r\\n                                       id=\\\"logo\\\" [(ngModel)]=\\\"request.logo\\\"\\r\\n                                       name=\\\"logo\\\"></div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"status\\\">Status</label>\\r\\n                                <select class=\\\"form-control\\\"\\r\\n                                        id=\\\"status\\\"\\r\\n                                        name=\\\"status\\\"\\r\\n                                        formControlName=\\\"status\\\"\\r\\n                                        [value]=\\\"request.status\\\"\\r\\n                                        [(ngModel)]=\\\"request.status\\\">\\r\\n                                    <option *ngFor=\\\"let p of statusString\\\" [ngValue]=\\\"p.valueOf()\\\">\\r\\n                                        {{ p }}\\r\\n                                    </option>\\r\\n                                </select>\\r\\n                           </div>\\r\\n                         </div>\\r\\n                    </div>\\r\\n                    <!--linha 5-->\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-2\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Login Access Code</label>\\r\\n                                <input class=\\\"form-check-input\\\"\\r\\n                                       type=\\\"checkbox\\\"\\r\\n                                       class=\\\"form-control\\\"\\r\\n                                       id=\\\"loginAccessCode\\\"\\r\\n                                       for=\\\"loginAccessCode\\\"\\r\\n                                       formControlName=\\\"loginAccessCode\\\"\\r\\n                                       [(ngModel)]=\\\"request.loginAccessCode\\\"\\r\\n                                       name=\\\"loginAccessCode\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-2\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Login CPF</label>\\r\\n                                <input class=\\\"form-check-input\\\"\\r\\n                                       type=\\\"checkbox\\\"\\r\\n                                       class=\\\"form-control\\\"\\r\\n                                       id=\\\"loginCpf\\\"\\r\\n                                       for=\\\"loginCpf\\\"\\r\\n                                       formControlName=\\\"loginCpf\\\"\\r\\n                                       [(ngModel)]=\\\"request.loginCpf\\\"\\r\\n                                       name=\\\"loginCpf\\\"></div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-2\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Login Email</label>\\r\\n                                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\"\\r\\n                                       class=\\\"form-control\\\"\\r\\n                                       id=\\\"loginEmail\\\"\\r\\n                                       for=\\\"loginEmail\\\"\\r\\n                                       formControlName=\\\"loginEmail\\\"\\r\\n                                       [(ngModel)]=\\\"request.loginEmail\\\"\\r\\n                                       name=\\\"loginEmail\\\"></div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-2\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Login Login Password</label>\\r\\n                                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\"\\r\\n                                       class=\\\"form-control\\\"\\r\\n                                       id=\\\"loginPassword\\\"\\r\\n                                       for=\\\"loginPassword\\\"\\r\\n                                       formControlName=\\\"loginPassword\\\"\\r\\n                                       [(ngModel)]=\\\"request.loginPassword\\\"\\r\\n                                       name=\\\"loginEmail\\\"></div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-2\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Login Login Token</label>\\r\\n                                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\"\\r\\n                                       class=\\\"form-control\\\"\\r\\n                                       id=\\\"loginToken\\\"\\r\\n                                       for=\\\"loginToken\\\"\\r\\n                                       formControlName=\\\"loginToken\\\"\\r\\n                                       [(ngModel)]=\\\"request.loginToken\\\"\\r\\n                                       name=\\\"loginToken\\\"></div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--botao-->\\r\\n                    <div class=\\\"dropdown show-dropdown\\\">\\r\\n                        <button data-toggle=\\\"dropdown\\\"\\r\\n                                aria-expanded=\\\"true\\\"\\r\\n                                (click)=\\\"save()\\\"\\r\\n                                class=\\\"btn btn-danger pull-right\\\">Salvar\\r\\n                        </button>\\r\\n                    </div>\\r\\n                    <!--botao-->\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","export default \"<app-sidebar></app-sidebar>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header card-header-danger\\\">\\r\\n                <p class=\\\"card-category\\\"></p>\\r\\n                <h4 class=\\\"card-title\\\">Editar Corretora</h4>\\r\\n            </div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <form>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-5\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Nome</label>\\r\\n                                <input type=\\\"text\\\"\\r\\n                                       class=\\\"form-control\\\"\\r\\n                                       id=\\\"name\\\"\\r\\n                                       formControlName=\\\"name\\\"\\r\\n                                       [value]=\\\"currentBrokerage.name\\\"\\r\\n                                       [(ngModel)]=\\\"currentBrokerage.name\\\"\\r\\n                                       name=\\\"name\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-3\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">CNPJ</label>\\r\\n                                <input disabled type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cnpj\\\"\\r\\n                                       formControlName=\\\"cnpj\\\"\\r\\n                                       [value]=\\\"currentBrokerage.cnpj\\\"\\r\\n                                       [(ngModel)]=\\\"currentBrokerage.cnpj\\\"\\r\\n                                       name=\\\"cnpj\\\"></div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Endereço</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"address\\\"\\r\\n                                       formControlName=\\\"address\\\"\\r\\n                                       [value]=\\\"currentBrokerage.address\\\"\\r\\n                                       [(ngModel)]=\\\"currentBrokerage.address\\\"\\r\\n                                       name=\\\"address\\\"></div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--linha 2-->\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-5\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Bairro</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                       id=\\\"addressNeighborhood\\\"\\r\\n                                       formControlName=\\\"addressNeighborhood\\\"\\r\\n                                       [value]=\\\"currentBrokerage.addressNeighborhood\\\"\\r\\n                                       [(ngModel)]=\\\"currentBrokerage.addressNeighborhood\\\"\\r\\n                                       name=\\\"addressNeighborhood\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-3\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Cidade</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                       id=\\\"addressCity\\\"\\r\\n                                       formControlName=\\\"addressCity\\\"\\r\\n                                       [value]=\\\"currentBrokerage.addressCity\\\"\\r\\n                                       [(ngModel)]=\\\"currentBrokerage.addressCity\\\"\\r\\n                                       name=\\\"addressCity\\\"></div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Estado</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                       id=\\\"addressState\\\"\\r\\n                                       formControlName=\\\"addressState\\\"\\r\\n                                       [value]=\\\"currentBrokerage.addressState\\\"\\r\\n                                       [(ngModel)]=\\\"currentBrokerage.addressState\\\"\\r\\n                                       name=\\\"addressState\\\"></div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--linha 2-->\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-5\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Swing Trade</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                       id=\\\"swingTrade\\\"\\r\\n                                       formControlName=\\\"swingTrade\\\"\\r\\n                                       [value]=\\\"currentBrokerage.swingTrade\\\"\\r\\n                                       [(ngModel)]=\\\"currentBrokerage.swingTrade\\\"\\r\\n                                       name=\\\"swingTrade\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-3\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Tipo</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                       id=\\\"tipo\\\"\\r\\n                                       formControlName=\\\"tipo\\\"\\r\\n                                       [value]=\\\"currentBrokerage.tipo\\\"\\r\\n                                       [(ngModel)]=\\\"currentBrokerage.tipo\\\"\\r\\n                                       name=\\\"tipo\\\"></div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Day Trade</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                       id=\\\"dayTrade\\\"\\r\\n                                       formControlName=\\\"dayTrade\\\"\\r\\n                                       [value]=\\\"currentBrokerage.dayTrade\\\"\\r\\n                                       [(ngModel)]=\\\"currentBrokerage.dayTrade\\\"\\r\\n                                       name=\\\"dayTrade\\\"></div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--linha 3-->\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-5\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">ISS</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                       id=\\\"iss\\\"\\r\\n                                       formControlName=\\\"iss\\\"\\r\\n                                       [value]=\\\"currentBrokerage.iss\\\"\\r\\n                                       [(ngModel)]=\\\"currentBrokerage.iss\\\"\\r\\n                                       name=\\\"iss\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-3\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Telefone</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                       id=\\\"phone\\\"\\r\\n                                       formControlName=\\\"phone\\\"\\r\\n                                       [value]=\\\"currentBrokerage.phone\\\"\\r\\n                                       [(ngModel)]=\\\"currentBrokerage.phone\\\"\\r\\n                                       name=\\\"phone\\\"></div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Web Site</label>\\r\\n                                <input type=\\\"text\\\"\\r\\n                                       class=\\\"form-control\\\"\\r\\n                                       id=\\\"website\\\"\\r\\n                                       formControlName=\\\"website\\\"\\r\\n                                       [value]=\\\"currentBrokerage.website\\\"\\r\\n                                       [(ngModel)]=\\\"currentBrokerage.website\\\"\\r\\n                                       name=\\\"website\\\"></div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--linha 4-->\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-5\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Email</label>\\r\\n                                <input type=\\\"text\\\"\\r\\n                                       class=\\\"form-control\\\"\\r\\n                                       id=\\\"email\\\"\\r\\n                                       formControlName=\\\"email\\\"\\r\\n                                       [value]=\\\"currentBrokerage.email\\\"\\r\\n                                       [(ngModel)]=\\\"currentBrokerage.email\\\"\\r\\n                                       name=\\\"email\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-3\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">logo</label>\\r\\n                                <input type=\\\"text\\\"\\r\\n                                       class=\\\"form-control\\\"\\r\\n                                       id=\\\"logo\\\"\\r\\n                                       formControlName=\\\"logo\\\"\\r\\n                                       [value]=\\\"currentBrokerage.logo\\\"\\r\\n                                       [(ngModel)]=\\\"currentBrokerage.logo\\\"\\r\\n                                       name=\\\"logo\\\"></div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Status</label>\\r\\n                                <select class=\\\"form-control\\\"\\r\\n                                        id=\\\"status\\\"\\r\\n                                        name=\\\"status\\\"\\r\\n                                        formControlName=\\\"status\\\"\\r\\n                                        [value]=\\\"currentBrokerage.status\\\"\\r\\n                                        [(ngModel)]=\\\"currentBrokerage.status\\\">\\r\\n                                    <option *ngFor=\\\"let p of statusString\\\" [ngValue]=\\\"p.valueOf()\\\">\\r\\n                                        {{ p }}\\r\\n                                    </option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--linha 5-->\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-2\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Login Access Code</label>\\r\\n                                <input class=\\\"form-check-input\\\"\\r\\n                                       type=\\\"checkbox\\\"\\r\\n                                       class=\\\"form-control\\\"\\r\\n                                       id=\\\"loginAccessCode\\\"\\r\\n                                       for=\\\"loginAccessCode\\\"\\r\\n                                       formControlName=\\\"loginAccessCode\\\"\\r\\n                                       [value]=\\\"currentBrokerage.loginAccessCode\\\"\\r\\n                                       [(ngModel)]=\\\"currentBrokerage.loginAccessCode\\\"\\r\\n                                       name=\\\"loginAccessCode\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-2\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Login CPF</label>\\r\\n                                <input class=\\\"form-check-input\\\"\\r\\n                                       type=\\\"checkbox\\\"\\r\\n                                       class=\\\"form-control\\\"\\r\\n                                       id=\\\"loginCpf\\\"\\r\\n                                       for=\\\"loginCpf\\\"\\r\\n                                       formControlName=\\\"loginCpf\\\"\\r\\n                                       [value]=\\\"currentBrokerage.loginCpf\\\"\\r\\n                                       [(ngModel)]=\\\"currentBrokerage.loginCpf\\\"\\r\\n                                       name=\\\"loginCpf\\\"></div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-2\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Login Email</label>\\r\\n                                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\"\\r\\n                                       class=\\\"form-control\\\"\\r\\n                                       id=\\\"loginEmail\\\"\\r\\n                                       for=\\\"loginEmail\\\"\\r\\n                                       formControlName=\\\"loginEmail\\\"\\r\\n                                       [value]=\\\"currentBrokerage.loginEmail\\\"\\r\\n                                       [(ngModel)]=\\\"currentBrokerage.loginEmail\\\"\\r\\n                                       name=\\\"loginEmail\\\"></div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-2\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Login Login Password</label>\\r\\n                                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\"\\r\\n                                       class=\\\"form-control\\\"\\r\\n                                       id=\\\"loginPassword\\\"\\r\\n                                       for=\\\"loginPassword\\\"\\r\\n                                       formControlName=\\\"loginPassword\\\"\\r\\n                                       [value]=\\\"currentBrokerage.loginPassword\\\"\\r\\n                                       [(ngModel)]=\\\"currentBrokerage.loginPassword\\\"\\r\\n                                       name=\\\"loginPassword\\\"></div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-2\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Login Login Token</label>\\r\\n                                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\"\\r\\n                                       class=\\\"form-control\\\"\\r\\n                                       id=\\\"loginToken\\\"\\r\\n                                       for=\\\"loginToken\\\"\\r\\n                                       formControlName=\\\"loginToken\\\"\\r\\n                                       [value]=\\\"currentBrokerage.loginToken\\\"\\r\\n                                       [(ngModel)]=\\\"currentBrokerage.loginToken\\\"\\r\\n                                       name=\\\"loginToken\\\"></div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--botao-->\\r\\n                    <div class=\\\"dropdown show-dropdown\\\">\\r\\n\\r\\n                        <ul class=\\\"dropdown-menu\\\">\\r\\n                            <div class=\\\"card\\\" style=\\\"width: 18rem;\\\">\\r\\n                                <div *ngIf=\\\"!response\\\">\\r\\n                                    <span (change)=\\\"showNotificationErro('bottom','right')\\\" class=\\\"badge badge-danger\\\">erro do servidor !</span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </ul>\\r\\n\\r\\n                        <button data-toggle=\\\"dropdown\\\"\\r\\n                                aria-expanded=\\\"true\\\"\\r\\n                                (click)=\\\"updateBrokerageX()\\\"\\r\\n                                (click)=\\\"showNotificationSucesso('bottom','right')\\\"\\r\\n                                routerLink=\\\"/brokerages\\\"\\r\\n                                class=\\\"btn btn-danger pull-right\\\">Atualizar\\r\\n                        </button>\\r\\n                      </div>\\r\\n                    <!--botao-->\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<a class=\\\"nav-item nav-link\\\" routerLink=\\\"/create-company\\\">Novo\\r\\n    <span class=\\\"material-icons\\\">add_comment</span></a>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-body table-responsive\\\">\\r\\n                <div *ngIf='showSpinner' class=\\\"spinner-grow text-danger\\\" role=\\\"status\\\">\\r\\n                    <span class=\\\"sr-only\\\"></span>\\r\\n                </div>\\r\\n                <div *ngIf='showSpinner' class=\\\"spinner-grow text-primary\\\" role=\\\"status\\\">\\r\\n                    <span class=\\\"sr-only\\\">Loading...</span>\\r\\n                </div>\\r\\n                <div *ngIf='showSpinner' class=\\\"spinner-grow text-secondary\\\" role=\\\"status\\\">\\r\\n                    <span class=\\\"sr-only\\\">Loading...</span>\\r\\n                </div>\\r\\n                <div *ngIf='showSpinner' class=\\\"spinner-grow text-success\\\" role=\\\"status\\\">\\r\\n                    <span class=\\\"sr-only\\\">Loading...</span>\\r\\n                </div>\\r\\n                <div *ngIf='showSpinner' class=\\\"spinner-grow text-danger\\\" role=\\\"status\\\">\\r\\n                    <span class=\\\"sr-only\\\">Loading...</span>\\r\\n                </div>\\r\\n                <div *ngIf='showSpinner' class=\\\"spinner-grow text-warning\\\" role=\\\"status\\\">\\r\\n                    <span class=\\\"sr-only\\\">Loading...</span>\\r\\n                </div>\\r\\n                <div *ngIf='showSpinner' class=\\\"spinner-grow text-info\\\" role=\\\"status\\\">\\r\\n                    <span class=\\\"sr-only\\\">Loading...</span>\\r\\n                </div>\\r\\n                <div *ngIf='showSpinner' class=\\\"spinner-grow text-light\\\" role=\\\"status\\\">\\r\\n                    <span class=\\\"sr-only\\\">Loading...</span>\\r\\n                </div>\\r\\n                <div *ngIf='showSpinner' class=\\\"spinner-grow text-dark\\\" role=\\\"status\\\">\\r\\n                    <span class=\\\"sr-only\\\">Loading...</span>\\r\\n                </div>\\r\\n                <form class=\\\"navbar-form\\\">\\r\\n                    <h1><span class=\\\"alert\\\">{{texto}}</span></h1>\\r\\n                    <div class=\\\"input-group no-border\\\">\\r\\n                        <input (keyup)=\\\"mudaTermo()\\\"\\r\\n                               placeholder=\\\"Digite o nome da empresa desejada...\\\"\\r\\n                               (keyup.enter)=\\\"onSearch()\\\"\\r\\n                               type=\\\"text\\\"\\r\\n                               id=\\\"pesquisar\\\"\\r\\n                               name=\\\"pesquisar\\\"\\r\\n                               class=\\\"form-control\\\"\\r\\n                               [formControl]=\\\"queryField\\\">\\r\\n                        <button (click)=\\\"onSearch()\\\"\\r\\n                                class=\\\"btn btn-white btn-round btn-just-icon\\\">\\r\\n                            <i class=\\\"material-icons\\\">search</i>\\r\\n                            <div class=\\\"ripple-container\\\"></div>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </form>\\r\\n                <form class=\\\"table-wrapper-scroll-y my-custom-scrollbar\\\">\\r\\n                    <table class=\\\"table table-hover\\\" class=\\\"table table-bordered table-striped mb-0\\\">\\r\\n                        <thead class=\\\"text-warning\\\">\\r\\n                        <tr>\\r\\n                            <th scope=\\\"col\\\">Nome</th>\\r\\n                            <th scope=\\\"col\\\">CNPJ</th>\\r\\n                            <th scope=\\\"col\\\">Setor</th>\\r\\n                            <th scope=\\\"col\\\">Status</th>\\r\\n                        </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                        <tr *ngFor=\\\"let company of results$ | async\\\">\\r\\n                            <td>{{ company.name }}</td>\\r\\n                            <td>{{ company.cnpj }}</td>\\r\\n                            <td>{{ company.sector.description }}</td>\\r\\n                            <td *ngIf=\\\"company.status == 'INATIVO'\\\">\\r\\n                                <button\\r\\n                                        mat-rais ed-button\\r\\n                                        type=\\\"button\\\"\\r\\n                                        class=\\\"btn btn-danger btn-link btn-sm btn-just-icon\\\">\\r\\n                                    <i class=\\\"material-icons\\\">warning</i>\\r\\n                                </button>\\r\\n                            </td>\\r\\n                            <td *ngIf=\\\"company.status == 'ATIVO'\\\">\\r\\n                                <button mat-raised-button\\r\\n                                        type=\\\"button\\\"\\r\\n                                        matTooltip=\\\"Corretora Ativa\\\"\\r\\n                                        class=\\\"btn  btn-link btn-sm btn-just-icon\\\">\\r\\n                          <span class=\\\"text-success\\\">\\r\\n                          <i class=\\\"material-icons\\\">done_all</i></span>\\r\\n                                </button>\\r\\n                            </td>\\r\\n                            <td class=\\\"td-actions text-right\\\">\\r\\n                                <button [routerLink]=\\\"['/edit-company', company.id]\\\"\\r\\n                                        class=\\\"btn btn-primary btn-link btn-sm btn-just-icon\\\" mat-raised-button\\r\\n                                        matTooltip=\\\"Editar Corretora\\\" routerLinkActive=\\\"active\\\"\\r\\n                                        type=\\\"button\\\">\\r\\n                                    <i class=\\\"material-icons\\\">edit</i>\\r\\n                                </button>\\r\\n                                <button routerLink=\\\"/create-company\\\"\\r\\n                                        routerLinkActive=\\\"active\\\"\\r\\n                                        mat-raised-button type=\\\"button\\\"\\r\\n                                        class=\\\"btn btn-danger btn-link btn-sm btn-just-icon\\\">\\r\\n                                    <i class=\\\"material-icons\\\">close</i>\\r\\n                                </button>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<!--GRID PERMANENTE-->\\r\\n<form class=\\\"table-wrapper-scroll-y my-custom-scrollbar\\\">\\r\\n    <table class=\\\"table table-hover\\\" class=\\\"table table-bordered table-striped mb-0\\\">\\r\\n    <thead class=\\\"text-warning\\\">\\r\\n    <tr>\\r\\n    </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n    <tr *ngFor=\\\"let company of responseCompany\\\">\\r\\n        <td>{{ company.name }}</td>\\r\\n        <td>{{ company.cnpj }}</td>\\r\\n        <td>{{ company.sector.description }}</td>\\r\\n        <td *ngIf=\\\"company.status == 'INATIVO'\\\">\\r\\n            <button\\r\\n                    mat-rais ed-button\\r\\n                    type=\\\"button\\\"\\r\\n                    class=\\\"btn btn-danger btn-link btn-sm btn-just-icon\\\">\\r\\n                <i class=\\\"material-icons\\\">warning</i>\\r\\n            </button>\\r\\n        </td>\\r\\n        <td *ngIf=\\\"company.status == 'ATIVO'\\\">\\r\\n            <button mat-raised-button\\r\\n                    type=\\\"button\\\"\\r\\n                    class=\\\"btn  btn-link btn-sm btn-just-icon\\\">\\r\\n                          <span class=\\\"text-success\\\">\\r\\n                          <i class=\\\"material-icons\\\">done_all</i></span>\\r\\n            </button>\\r\\n            <button [routerLink]=\\\"['/edit-company', company.id]\\\"\\r\\n                    class=\\\"btn btn-primary btn-link btn-sm btn-just-icon\\\" mat-raised-button\\r\\n                    matTooltip=\\\"Editar Corretora\\\" routerLinkActive=\\\"active\\\"\\r\\n                    type=\\\"button\\\">\\r\\n                <i class=\\\"material-icons\\\">edit</i>\\r\\n            </button>\\r\\n        </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n</form>\\r\\n\\r\\n\"","export default \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header card-header-danger\\\">\\r\\n                <p class=\\\"card-category\\\"></p>\\r\\n                <h4 class=\\\"card-title\\\">Cadastrar Empresa</h4>\\r\\n             </div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <form class=\\\"form-group\\\" [formGroup]=\\\"companyForm\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-5\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Nome</label>\\r\\n                                <input type=\\\"text\\\"\\r\\n                                       class=\\\"form-control\\\"\\r\\n                                       id=\\\"name\\\"\\r\\n                                       formControlName=\\\"name\\\"\\r\\n                                       [(ngModel)]=\\\"request.name\\\"\\r\\n                                       name=\\\"name\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-3\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Atividade</label>\\r\\n                                <input type=\\\"text\\\"\\r\\n                                       class=\\\"form-control\\\"\\r\\n                                       id=\\\"mainActivity\\\"\\r\\n                                       formControlName=\\\"mainActivity\\\"\\r\\n                                       [(ngModel)]=\\\"request.mainActivity\\\"\\r\\n                                       name=\\\"mainActivity\\\"></div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-3\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Mercado</label>\\r\\n                                <input type=\\\"text\\\"\\r\\n                                       class=\\\"form-control\\\"\\r\\n                                       id=\\\"market\\\"\\r\\n                                       formControlName=\\\"market\\\"\\r\\n                                       [(ngModel)]=\\\"request.market\\\"\\r\\n                                       name=\\\"market\\\"></div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--linha 2-->\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-5\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">CNPJ</label>\\r\\n                                <input type=\\\"text\\\"\\r\\n                                       class=\\\"form-control\\\"\\r\\n                                       id=\\\"cnpj\\\"\\r\\n                                       formControlName=\\\"cnpj\\\"\\r\\n                                       [(ngModel)]=\\\"request.cnpj\\\"\\r\\n                                       name=\\\"cnpj\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-5\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">\\r\\n                                    Classificação setoria</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                       id=\\\"setorialClassification\\\"\\r\\n                                       formControlName=\\\"setorialClassification\\\"\\r\\n                                       [(ngModel)]=\\\"request.setorialClassification\\\"\\r\\n                                       name=\\\"setorialClassification\\\"></div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--linha 2-->\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-5\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Site</label>\\r\\n                                <input type=\\\"text\\\"\\r\\n                                       class=\\\"form-control\\\"\\r\\n                                       id=\\\"site\\\"\\r\\n                                       formControlName=\\\"site\\\"\\r\\n                                       [(ngModel)]=\\\"request.site\\\"\\r\\n                                       name=\\\"site\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-3\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                        <label for=\\\"status\\\">Status</label>\\r\\n                                        <select class=\\\"form-control\\\"\\r\\n                                                   id=\\\"status\\\"\\r\\n                                                   name=\\\"status\\\"\\r\\n                                                   formControlName=\\\"status\\\"\\r\\n                                                   [value]=\\\"request.status\\\"\\r\\n                                                   [(ngModel)]=\\\"request.status\\\">\\r\\n                                               <option *ngFor=\\\"let p of statusString\\\" [ngValue]=\\\"p.valueOf()\\\">\\r\\n                                                   {{ p }}\\r\\n                                               </option>\\r\\n                                           </select>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                     <div class=\\\"col-md-3\\\">\\r\\n                        <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                            <label for=\\\"sector\\\">Setor</label>\\r\\n                            <select class=\\\"form-control\\\"\\r\\n                                    id=\\\"sector\\\"\\r\\n                                    formControlName=\\\"sector\\\"\\r\\n                                    [value]=\\\"request.sector\\\"\\r\\n                                    [(ngModel)]=\\\"request.sector\\\">\\r\\n                                <option  *ngFor=\\\"let sector of sectores$ | async\\\" [value]=\\\"sector.id\\\">\\r\\n                                    {{sector.id}} => {{sector.description}}\\r\\n                                </option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n<!--botao-->\\r\\n                    <div class=\\\"dropdown show-dropdown\\\">\\r\\n                        <button data-toggle=\\\"dropdown\\\"\\r\\n                                aria-expanded=\\\"true\\\"\\r\\n                                (click)=\\\"save()\\\"\\r\\n                                class=\\\"btn btn-danger pull-right\\\">Salvar\\r\\n                        </button>\\r\\n                    </div>\\r\\n<!--botao-->\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\"","export default \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header card-header-danger\\\">\\r\\n                <p class=\\\"card-category\\\"></p>\\r\\n                <h4 class=\\\"card-title\\\">Editar Empresa</h4>\\r\\n            </div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <form class=\\\"form-group\\\" [formGroup]=\\\"companyForm\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-5\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Nome</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                       id=\\\"name\\\"\\r\\n                                       formControlName=\\\"name\\\"\\r\\n                                       [value]=\\\"currentCompany.name\\\"\\r\\n                                       [(ngModel)]=\\\"currentCompany.name\\\"\\r\\n                                       name=\\\"name\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-3\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"mainActivity\\\">Atividade</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                       id=\\\"mainActivity\\\"\\r\\n                                       formControlName=\\\"mainActivity\\\"\\r\\n                                       [value]=\\\"currentCompany.mainActivity\\\"\\r\\n                                       [(ngModel)]=\\\"currentCompany.mainActivity\\\"\\r\\n                                       name=\\\"mainActivity\\\"></div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-3\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"market\\\">Mercado</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                       id=\\\"market\\\"\\r\\n                                       formControlName=\\\"market\\\"\\r\\n                                       [value]=\\\"currentCompany.market\\\"\\r\\n                                       [(ngModel)]=\\\"currentCompany.market\\\"\\r\\n                                       name=\\\"market\\\"></div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--linha 2-->\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-5\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"cnpj\\\">CNPJ</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                       id=\\\"cnpj\\\"\\r\\n                                       formControlName=\\\"cnpj\\\"\\r\\n                                       [value]=\\\"currentCompany.cnpj\\\"\\r\\n                                       [(ngModel)]=\\\"currentCompany.cnpj\\\"\\r\\n                                       name=\\\"cnpj\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-5\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"setorialClassification\\\">\\r\\n                                    Classificação setoria</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                       id=\\\"setorialClassification\\\"\\r\\n                                       name=\\\"setorialClassification\\\"\\r\\n                                       formControlName=\\\"setorialClassification\\\"\\r\\n                                       [value]=\\\"currentCompany.setorialClassification\\\"\\r\\n                                       [(ngModel)]=\\\"currentCompany.setorialClassification\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--linha 2-->\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-5\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"site\\\">Site</label>\\r\\n                                <input type=\\\"text\\\"\\r\\n                                       class=\\\"form-control\\\"\\r\\n                                       id=\\\"site\\\"\\r\\n                                       name=\\\"site\\\"\\r\\n                                       formControlName=\\\"site\\\"\\r\\n                                       [value]=\\\"currentCompany.site\\\"\\r\\n                                       [(ngModel)]=\\\"currentCompany.site\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-3\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"status\\\">Status</label>\\r\\n                                <select class=\\\"form-control\\\"\\r\\n                                        id=\\\"status\\\"\\r\\n                                        name=\\\"status\\\"\\r\\n                                        formControlName=\\\"status\\\"\\r\\n                                        [value]=\\\"currentCompany.status\\\"\\r\\n                                        [(ngModel)]=\\\"currentCompany.status\\\">\\r\\n                                    <option *ngFor=\\\"let p of statusString\\\" [ngValue]=\\\"p.valueOf()\\\">\\r\\n                                        {{ p }}\\r\\n                                    </option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-3\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"sector\\\">Setor</label>\\r\\n                                <select class=\\\"form-control\\\"\\r\\n                                        id=\\\"sector\\\"\\r\\n                                        formControlName=\\\"sector\\\"\\r\\n                                        [value]=\\\"currentCompany.sector\\\"\\r\\n                                        [(ngModel)]=\\\"currentCompany.sector\\\">\\r\\n                                    <option  *ngFor=\\\"let sector of sectores$ | async\\\" [value]=\\\"sector.id\\\">\\r\\n                                        {{sector.id}} => {{sector.description}}\\r\\n                                    </option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n                        </div>\\r\\n<!--combo-->\\r\\n                    </div>\\r\\n                    <!--botao-->\\r\\n                    <div class=\\\"dropdown show-dropdown\\\">\\r\\n                        <button data-toggle=\\\"dropdown\\\"\\r\\n                                aria-expanded=\\\"true\\\"\\r\\n                                (click)=\\\"updateCompany()\\\"\\r\\n                                class=\\\"btn btn-danger pull-right\\\">Salvar\\r\\n                        </button>\\r\\n                    </div>\\r\\n                    <!--botao-->\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","export default \"<nav class=\\\"navbar navbar-expand-lg navbar-transparent  navbar-absolute fixed-top\\\">\\r\\n\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <button mat-raised-button class=\\\"navbar-toggler\\\" type=\\\"button\\\" (click)=\\\"sidebarToggle()\\\">\\r\\n            <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n            <span class=\\\"navbar-toggler-icon icon-bar\\\"></span>\\r\\n            <span class=\\\"navbar-toggler-icon icon-bar\\\"></span>\\r\\n            <span class=\\\"navbar-toggler-icon icon-bar\\\"></span>\\r\\n        </button>\\r\\n        <div class=\\\"collapse navbar-collapse justify-content-end\\\" id=\\\"navigation\\\">\\r\\n            <ul class=\\\"navbar-nav\\\">\\r\\n                <li class=\\\"nav-item\\\">\\r\\n                    <a class=\\\"nav-link\\\" href=\\\"javascript:void(0)\\\">\\r\\n                        <i class=\\\"material-icons\\\">person</i>\\r\\n                        <p>\\r\\n                            <span class=\\\"d-lg-none d-md-block\\\">Account</span>\\r\\n                        </p>\\r\\n                    </a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n</nav>\\r\\n\"","export default \"<div class=\\\"logo\\\">\\r\\n</div>\\r\\n<div class=\\\"sidebar-wrapper\\\">\\r\\n    <div *ngIf=\\\"isMobileMenu()\\\">\\r\\n        <form class=\\\"navbar-form\\\">\\r\\n      <span class=\\\"bmd-form-group\\\">\\r\\n        <div class=\\\"input-group no-border\\\">\\r\\n          <input type=\\\"text\\\" value=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\">\\r\\n          <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-white btn-round btn-just-icon\\\">\\r\\n            <i class=\\\"material-icons\\\">search</i>\\r\\n            <div class=\\\"ripple-container\\\"></div>\\r\\n          </button>\\r\\n        </div>\\r\\n      </span>\\r\\n        </form>\\r\\n        <ul class=\\\"nav navbar-nav nav-mobile-menu\\\">\\r\\n            <li class=\\\"nav-item\\\">\\r\\n                <a class=\\\"nav-link\\\" href=\\\"javascript:void(0)\\\">\\r\\n                    <i class=\\\"material-icons\\\">dashboard</i>\\r\\n                    <p>\\r\\n                        <span class=\\\"d-lg-none d-md-block\\\">Stats</span>\\r\\n                    </p>\\r\\n                </a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item dropdown\\\">\\r\\n                <a class=\\\"nav-link\\\" href=\\\"javascript:void(0)\\\" id=\\\"navbarDropdownMenuLink\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                    <i class=\\\"material-icons\\\">notifications</i>\\r\\n                    <span class=\\\"notification\\\">5</span>\\r\\n                    <p>\\r\\n                        <span class=\\\"d-lg-none d-md-block\\\">Some Actions</span>\\r\\n                    </p>\\r\\n                </a>\\r\\n                <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"navbarDropdownMenuLink\\\">\\r\\n                    <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Mike John responded to your email</a>\\r\\n                    <a class=\\\"dropdown-item\\\" href=\\\"#\\\">You have 5 new tasks</a>\\r\\n                    <a class=\\\"dropdown-item\\\" href=\\\"#\\\">You're now friend with Andrew</a>\\r\\n                    <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Another Notification</a>\\r\\n                    <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Another One</a>\\r\\n                </div>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\">\\r\\n                <a class=\\\"nav-link\\\" href=\\\"javascript:void(0)\\\">\\r\\n                    <i class=\\\"material-icons\\\">person</i>\\r\\n                    <p>\\r\\n                        <span class=\\\"d-lg-none d-md-block\\\">Account</span>\\r\\n                    </p>\\r\\n                </a>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n    <ul class=\\\"nav\\\">\\r\\n        <li routerLinkActive=\\\"active\\\" *ngFor=\\\"let menuItem of menuItems\\\" class=\\\"{{menuItem.class}} nav-item\\\">\\r\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"[menuItem.path]\\\">\\r\\n                <i class=\\\"material-icons\\\">{{menuItem.icon}}</i>\\r\\n                <p>{{menuItem.title}}</p>\\r\\n            </a>\\r\\n        </li>\\r\\n    </ul>\\r\\n</div>\\r\\n\"","export default \"<a class=\\\"nav-item nav-link\\\" routerLink=\\\"create-emolumentos\\\">Novo\\n    <span class=\\\"material-icons\\\">add_comment</span></a>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body table-responsive\\\">\\n    <div class=\\\"spinner-grow text-primary\\\" role=\\\"status\\\">\\n        <span class=\\\"sr-only\\\">Loading...</span>\\n    </div>\\n    <div class=\\\"spinner-grow text-secondary\\\" role=\\\"status\\\">\\n        <span class=\\\"sr-only\\\">Loading...</span>\\n    </div>\\n    <div class=\\\"spinner-grow text-success\\\" role=\\\"status\\\">\\n        <span class=\\\"sr-only\\\">Loading...</span>\\n    </div>\\n    <div class=\\\"spinner-grow text-danger\\\" role=\\\"status\\\">\\n        <span class=\\\"sr-only\\\">Loading...</span>\\n    </div>\\n    <div class=\\\"spinner-grow text-warning\\\" role=\\\"status\\\">\\n        <span class=\\\"sr-only\\\">Loading...</span>\\n    </div>\\n    <div class=\\\"spinner-grow text-info\\\" role=\\\"status\\\">\\n        <span class=\\\"sr-only\\\">Loading...</span>\\n    </div>\\n    <div class=\\\"spinner-grow text-light\\\" role=\\\"status\\\">\\n        <span class=\\\"sr-only\\\">Loading...</span>\\n    </div>\\n    <div class=\\\"spinner-grow text-dark\\\" role=\\\"status\\\">\\n        <span class=\\\"sr-only\\\">Loading...</span>\\n    </div>\\n                <form class=\\\"navbar-form\\\">\\n                    <h1><span class=\\\"alert\\\">{{texto}}</span></h1>\\n                    <div class=\\\"input-group no-border\\\">\\n                        <input (keyup)=\\\"mudaTermo()\\\"\\n                               placeholder=\\\"Digite o nome desejado...\\\"\\n                               (keyup.enter)=\\\"onSearch()\\\"\\n                               type=\\\"text\\\"\\n                               id=\\\"pesquisar\\\"\\n                               name=\\\"pesquisar\\\"\\n                               class=\\\"form-control\\\"\\n                               [formControl]=\\\"queryField\\\">\\n                        <button (click)=\\\"onSearch()\\\"\\n                                class=\\\"btn btn-white btn-round btn-just-icon\\\">\\n                            <i class=\\\"material-icons\\\">search</i>\\n                            <div class=\\\"ripple-container\\\"></div>\\n                        </button>\\n                    </div>\\n                </form>\\n                <form class=\\\"table-wrapper-scroll-y my-custom-scrollbar\\\">\\n                    <table class=\\\"table table-hover\\\" class=\\\"table table-bordered table-striped mb-0\\\">\\n                        <thead class=\\\"text-warning\\\">\\n                        <tr>\\n                            <th scope=\\\"col\\\">negotiation</th>\\n                            <th scope=\\\"col\\\">records</th>\\n                            <th scope=\\\"col\\\">saleoff</th>\\n                            <th scope=\\\"col\\\">totalCustos</th>\\n                            <th scope=\\\"col\\\">walletFk</th>\\n                        </tr>\\n                        </thead>\\n                        <tbody>\\n                        <tr *ngFor=\\\"let emolumentos of results$ | async\\\">\\n                            <td>{{ emolumentos.negotiation }}</td>\\n                            <td>{{ emolumentos.records }}</td>\\n                            <td>{{ emolumentos.saleoff }}</td>\\n                            <td>{{ emolumentos.totalCustos }}</td>\\n                            <td>{{ emolumentos.walletFk }}</td>\\n                            <td class=\\\"td-actions text-right\\\">\\n                                <button [routerLink]=\\\"['/edit-emolumentos', emolumentos.id]\\\"\\n                                        class=\\\"btn btn-primary btn-link btn-sm btn-just-icon\\\" mat-raised-button\\n                                        matTooltip=\\\"Editar Corretora\\\" routerLinkActive=\\\"active\\\"\\n                                        type=\\\"button\\\">\\n                                    <i class=\\\"material-icons\\\">edit</i>\\n                                </button>\\n                                <button routerLink=\\\"/create-company\\\"\\n                                        routerLinkActive=\\\"active\\\"\\n                                        mat-raised-button type=\\\"button\\\"\\n                                        class=\\\"btn btn-danger btn-link btn-sm btn-just-icon\\\">\\n                                    <i class=\\\"material-icons\\\">close</i>\\n                                </button>\\n                            </td>\\n                        </tr>\\n                        </tbody>\\n                    </table>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<!--GRID PERMANENTE-->\\n<form class=\\\"table-wrapper-scroll-y my-custom-scrollbar\\\">\\n    <table class=\\\"table table-hover\\\" class=\\\"table table-bordered table-striped mb-0\\\">\\n        <thead class=\\\"text-warning\\\">\\n        <tr>\\n        </tr>\\n        </thead>\\n        <tbody>\\n        <tr *ngFor=\\\"let emolumentos of responseEmolumentos\\\">\\n            <td>{{ emolumentos.negotiation }}</td>\\n            <td>{{ emolumentos.records }}</td>\\n            <td>{{ emolumentos.saleoff }}</td>\\n            <td>{{ emolumentos.totalCustos }}</td>\\n            <td>{{ emolumentos.walletFk }}</td>\\n            <td class=\\\"td-actions text-right\\\">\\n                <button [routerLink]=\\\"['/edit-emolumentos', emolumentos.id]\\\"\\n                        class=\\\"btn btn-primary btn-link btn-sm btn-just-icon\\\" mat-raised-button\\n                        matTooltip=\\\"Editar Corretora\\\" routerLinkActive=\\\"active\\\"\\n                        type=\\\"button\\\">\\n                    <i class=\\\"material-icons\\\">edit</i>\\n                </button>\\n                <button routerLink=\\\"/create-company\\\"\\n                        routerLinkActive=\\\"active\\\"\\n                        mat-raised-button type=\\\"button\\\"\\n                        class=\\\"btn btn-danger btn-link btn-sm btn-just-icon\\\">\\n                    <i class=\\\"material-icons\\\">close</i>\\n                </button>\\n        </tr>\\n        </tbody>\\n    </table>\\n</form>\\n\\n\\n\"","export default \"<a class=\\\"nav-item nav-link\\\" routerLink=\\\"create-brokerage\\\">Novo\\n    <span class=\\\"material-icons\\\">add_comment</span></a>\\n<div class=\\\"card mt-4\\\">\\n    <h4 class=\\\"card-header\\\">Home</h4>\\n    <div class=\\\"card-body\\\">\\n        <div *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm\\\"></div>\\n        <ul *ngIf=\\\"userFromApi\\\">\\n            <li>{{userFromApi.firstName}} {{userFromApi.lastName}}</li>\\n        </ul>\\n    </div>\\n</div>\\n\\n\"","export default \"<base href='/'>\\r\\n<div class=\\\"wrapper\\\">\\r\\n\\r\\n   <div class=\\\"sidebar\\\"\\r\\n         data-color=\\\"danger\\\"\\r\\n         data-background-color=\\\"white\\\"\\r\\n         data-image=\\\"./assets/img/sidebar-1.jpg\\\">\\r\\n        <app-sidebar></app-sidebar>\\r\\n        <div class=\\\"sidebar-background\\\"\\r\\n             style=\\\"background-image:\\r\\n             url(https://firebasestorage.googleapis.com/v0/b/multbroker-img.appspot.com/o/logo.jpg?alt=media&token=3fe05428-7418-41b0-b3c3-6ef39405b1d3)\\\"></div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"main-panel\\\">\\r\\n        <router-outlet></router-outlet>\\r\\n        <app-footer></app-footer>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\"","export default \"<base href='/'>\\r\\n<div class=\\\"wrapper\\\">\\r\\n\\r\\n<div class=\\\"col-md-6 offset-md-3 mt-5\\\">\\r\\n    <div class=\\\"alert alert-info\\\">\\r\\n        <h4>MultBroker Login</h4>\\r\\n    </div>\\r\\n    <div class=\\\"card\\\">\\r\\n\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"username\\\">Nome do Usuario</label>\\r\\n                    <input type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\"\\r\\n                           [ngClass]=\\\"{ 'is-invalid': submitted && f.username.errors }\\\" />\\r\\n                    <div *ngIf=\\\"submitted && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"f.username.errors.required\\\">Username e Requerido</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"password\\\">Senha do Usuario</label>\\r\\n                    <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\"\\r\\n                           [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\" />\\r\\n                    <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"f.password.errors.required\\\">Senha e Requerida</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <button [disabled]=\\\"loading\\\" class=\\\"btn btn-primary\\\">\\r\\n                    <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\r\\n                    Entrar\\r\\n                </button>\\r\\n                <div *ngIf=\\\"error\\\" class=\\\"alert alert-danger mt-3 mb-0\\\">{{error}}</div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n</div>\\r\\n\"","export default \"<p>sector works!</p>\\r\\n\"","export default \"<a class=\\\"nav-item nav-link\\\" routerLink=\\\"create-brokerage\\\">Novo\\r\\n    <span class=\\\"material-icons\\\">add_comment</span></a>\\r\\n<div class=\\\"card mt-4\\\">\\r\\n    <h4 class=\\\"card-header\\\">User</h4>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm\\\"></div>\\r\\n        <ul *ngIf=\\\"userFromApi\\\">\\r\\n            <li>{{userFromApi.firstName}} {{userFromApi.lastName}}</li>\\r\\n        </ul>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","export default \"<app-sidebar></app-sidebar>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header card-header-danger\\\">\\r\\n                <p class=\\\"card-category\\\"></p>\\r\\n                <h4 class=\\\"card-title\\\">Cadastrar Empresa</h4>\\r\\n            </div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <form class=\\\"form-group\\\" [formGroup]=\\\"walletForm\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n\\r\\n                        <div class=\\\"col-md-5\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Nome</label>\\r\\n                                <input type=\\\"text\\\"\\r\\n                                       class=\\\"form-control\\\"\\r\\n                                       id=\\\"name\\\"\\r\\n                                       formControlName=\\\"name\\\"\\r\\n                                       [(ngModel)]=\\\"request.name\\\"\\r\\n                                       name=\\\"name\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-3\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Atividade</label>\\r\\n                                <input type=\\\"text\\\"\\r\\n                                       class=\\\"form-control\\\"\\r\\n                                       id=\\\"mainActivity\\\"\\r\\n                                       formControlName=\\\"mainActivity\\\"\\r\\n                                       [(ngModel)]=\\\"request.mainActivity\\\"\\r\\n                                       name=\\\"mainActivity\\\"></div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-3\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Mercado</label>\\r\\n                                <input type=\\\"text\\\"\\r\\n                                       class=\\\"form-control\\\"\\r\\n                                       id=\\\"market\\\"\\r\\n                                       formControlName=\\\"market\\\"\\r\\n                                       [(ngModel)]=\\\"request.market\\\"\\r\\n                                       name=\\\"market\\\"></div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--linha 2-->\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-5\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">CNPJ</label>\\r\\n                                <input type=\\\"text\\\"\\r\\n                                       class=\\\"form-control\\\"\\r\\n                                       id=\\\"cnpj\\\"\\r\\n                                       formControlName=\\\"cnpj\\\"\\r\\n                                       [(ngModel)]=\\\"request.cnpj\\\"\\r\\n                                       name=\\\"cnpj\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-5\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">\\r\\n                                    Classificação setoria</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                       id=\\\"setorialClassification\\\"\\r\\n                                       formControlName=\\\"setorialClassification\\\"\\r\\n                                       [(ngModel)]=\\\"request.setorialClassification\\\"\\r\\n                                       name=\\\"setorialClassification\\\"></div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--linha 2-->\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-5\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"name\\\">Site</label>\\r\\n                                <input type=\\\"text\\\"\\r\\n                                       class=\\\"form-control\\\"\\r\\n                                       id=\\\"site\\\"\\r\\n                                       formControlName=\\\"site\\\"\\r\\n                                       [(ngModel)]=\\\"request.site\\\"\\r\\n                                       name=\\\"site\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-3\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"status\\\">Status</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                       id=\\\"status\\\"\\r\\n                                       formControlName=\\\"status\\\"\\r\\n                                       [(ngModel)]=\\\"request.status\\\"\\r\\n                                       name=\\\"status\\\"></div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-3\\\">\\r\\n                            <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                <label for=\\\"sector\\\">Setor</label>\\r\\n                                <select class=\\\"form-control\\\"\\r\\n                                        id=\\\"sector\\\"\\r\\n                                        formControlName=\\\"sector\\\"\\r\\n                                        [value]=\\\"request.sector\\\"\\r\\n                                        [(ngModel)]=\\\"request.sector\\\">\\r\\n                                    <option  *ngFor=\\\"let sector of sectores | async\\\"\\r\\n                                             [value]=\\\"sector.id\\\">\\r\\n\\r\\n                                        {{sector.id}} => {{sector.description}}\\r\\n\\r\\n                                    </option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <!--              <div class=\\\"col-md-3\\\">\\r\\n                                          <div class=\\\"form-group\\\" class=\\\"example-full-width\\\">\\r\\n                                              <label for=\\\"name\\\">Setor</label>\\r\\n                                              <select formControlName=\\\"sector\\\" id=\\\"sector\\\" [(ngModel)]=\\\"request.sector\\\" name=\\\"sector\\\">\\r\\n                                                  <option *ngFor=\\\"let responseSector of responseSector; let i = index\\\" [value]=\\\"responseSector[i].id\\\">\\r\\n                                                         {{responseSector[i].description}}\\r\\n                                                  </option>\\r\\n                                              </select>\\r\\n                                          </div>\\r\\n                                      </div>-->\\r\\n\\r\\n                    </div>\\r\\n                    <!--botao-->\\r\\n                    <div class=\\\"dropdown show-dropdown\\\">\\r\\n                        <button data-toggle=\\\"dropdown\\\"\\r\\n                                aria-expanded=\\\"true\\\"\\r\\n                                (click)=\\\"save()\\\"\\r\\n                                class=\\\"btn btn-danger pull-right\\\">Salvar\\r\\n                        </button>\\r\\n                    </div>\\r\\n                    <!--botao-->\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\"","export default \"<app-sidebar></app-sidebar>\\r\\n\"","export default \"<a class=\\\"nav-item nav-link\\\" routerLink=\\\"create-brokerage\\\">Novo\\r\\n    <span class=\\\"material-icons\\\">add_comment</span></a>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-body table-responsive\\\">\\r\\n                <div *ngIf='showSpinner' class=\\\"spinner-grow text-danger\\\" role=\\\"status\\\">\\r\\n                    <span class=\\\"sr-only\\\"></span>\\r\\n                </div>\\r\\n                <div *ngIf='showSpinner' class=\\\"spinner-grow text-primary\\\" role=\\\"status\\\">\\r\\n                    <span class=\\\"sr-only\\\">Loading...</span>\\r\\n                </div>\\r\\n                <div *ngIf='showSpinner' class=\\\"spinner-grow text-secondary\\\" role=\\\"status\\\">\\r\\n                    <span class=\\\"sr-only\\\">Loading...</span>\\r\\n                </div>\\r\\n                <div *ngIf='showSpinner' class=\\\"spinner-grow text-success\\\" role=\\\"status\\\">\\r\\n                    <span class=\\\"sr-only\\\">Loading...</span>\\r\\n                </div>\\r\\n                <div *ngIf='showSpinner' class=\\\"spinner-grow text-danger\\\" role=\\\"status\\\">\\r\\n                    <span class=\\\"sr-only\\\">Loading...</span>\\r\\n                </div>\\r\\n                <div *ngIf='showSpinner' class=\\\"spinner-grow text-warning\\\" role=\\\"status\\\">\\r\\n                    <span class=\\\"sr-only\\\">Loading...</span>\\r\\n                </div>\\r\\n                <div *ngIf='showSpinner' class=\\\"spinner-grow text-info\\\" role=\\\"status\\\">\\r\\n                    <span class=\\\"sr-only\\\">Loading...</span>\\r\\n                </div>\\r\\n                <div *ngIf='showSpinner' class=\\\"spinner-grow text-light\\\" role=\\\"status\\\">\\r\\n                    <span class=\\\"sr-only\\\">Loading...</span>\\r\\n                </div>\\r\\n                <div *ngIf='showSpinner' class=\\\"spinner-grow text-dark\\\" role=\\\"status\\\">\\r\\n                    <span class=\\\"sr-only\\\">Loading...</span>\\r\\n                </div>\\r\\n                <form class=\\\"navbar-form\\\">\\r\\n                    <h1><span class=\\\"alert\\\">{{texto}}</span></h1>\\r\\n                    <div class=\\\"input-group no-border\\\">\\r\\n                        <input (keyup)=\\\"mudaTermo()\\\" placeholder=\\\"Digite o nome da carteira desejada...\\\"\\r\\n                               (keyup.enter)=\\\"onSearch()\\\"\\r\\n                               type=\\\"text\\\"\\r\\n                               id=\\\"pesquisar\\\"\\r\\n                               name=\\\"pesquisar\\\"\\r\\n                               class=\\\"form-control\\\"\\r\\n                               [formControl]=\\\"queryField\\\">\\r\\n                        <button (click)=\\\"onSearch()\\\"\\r\\n                                class=\\\"btn btn-white btn-round btn-just-icon\\\">\\r\\n                            <i class=\\\"material-icons\\\">search</i>\\r\\n                            <div class=\\\"ripple-container\\\"></div>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </form>\\r\\n                <form>\\r\\n                    <table class=\\\"table table-hover\\\">\\r\\n                        <thead class=\\\"text-warning\\\">\\r\\n                        <tr>\\r\\n                            <th scope=\\\"col\\\">ID</th>\\r\\n                            <th scope=\\\"col\\\">Modalidade</th>\\r\\n                            <th scope=\\\"col\\\">Quantidade</th>\\r\\n                            <th scope=\\\"col\\\">Situação</th>\\r\\n                            <th scope=\\\"col\\\">Data da Compra</th>\\r\\n                            <th scope=\\\"col\\\">Date da Vend</th>\\r\\n                            <th scope=\\\"col\\\">Valor do Dia</th>\\r\\n                            <th scope=\\\"col\\\">Preço</th>\\r\\n                            <th scope=\\\"col\\\">Corretora</th>\\r\\n                            <th scope=\\\"col\\\">Ação</th>\\r\\n                            <th scope=\\\"col\\\">Usuario</th>\\r\\n                        </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                        <tr *ngFor=\\\"let wallet of results$ | async\\\">\\r\\n                            <td>{{ wallet.id }}</td>\\r\\n                            <td>{{ wallet.modality }}</td>\\r\\n                            <td>{{ wallet.amount }}</td>\\r\\n                            <td>{{ wallet.situation }}</td>\\r\\n                            <td>{{ wallet.purchaseData }}</td>\\r\\n                            <td>{{ wallet.saleDate }}</td>\\r\\n                            <td>{{ wallet.actionValueDay | currency}}</td>\\r\\n                            <td>{{ wallet.priceAction | currency}}</td>\\r\\n                            <td>{{ wallet.brokerage.name | uppercase }}</td>\\r\\n                            <td>{{ wallet.action.description | uppercase }}</td>\\r\\n                            <td>{{ wallet.userEntity.nomeCompleto | uppercase }}</td>\\r\\n                            <td class=\\\"td-actions text-right\\\">\\r\\n                                <button [routerLink]=\\\"['/edit-wallet', wallet.id]\\\"\\r\\n                                        class=\\\"btn btn-primary btn-link btn-sm btn-just-icon\\\"\\r\\n                                        mat-raised-button\\r\\n                                        matTooltip=\\\"Editar Carteira\\\" routerLinkActive=\\\"active\\\"\\r\\n                                        type=\\\"button\\\">\\r\\n                                    <i class=\\\"material-icons\\\">edit</i>\\r\\n                                </button>\\r\\n                                <button routerLink=\\\"/create-wallet\\\"\\r\\n                                        routerLinkActive=\\\"active\\\"\\r\\n                                        mat-raised-button\\r\\n                                        type=\\\"button\\\"\\r\\n                                        class=\\\"btn btn-danger btn-link btn-sm btn-just-icon\\\">\\r\\n                                    <i class=\\\"material-icons\\\">close</i>\\r\\n                                </button>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<!--GRID PERMANENTE-->\\r\\n<table class=\\\"table table-hover\\\">\\r\\n    <thead class=\\\"text-warning\\\">\\r\\n    <tr>\\r\\n    </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n    <!-- {{ dateObj | date }}               // output is 'Jun 15, 2015'\\r\\n     {{ dateObj | date:'medium' }}      // output is 'Jun 15, 2015, 9:43:11 PM'\\r\\n     {{ dateObj | date:'shortTime' }}   // output is '9:43 PM'\\r\\n     {{ dateObj | date:'mm:ss' }}       // output is '43:11'-->\\r\\n    <tr *ngFor=\\\"let wallet of responseWallet\\\">\\r\\n        <td>{{ wallet.id }}</td>\\r\\n        <td>{{ wallet.modality }}</td>\\r\\n        <td>{{ wallet.amount }}</td>\\r\\n        <td>{{ wallet.situation }}</td>\\r\\n        <td>{{ wallet.purchaseData }}</td>\\r\\n        <td>{{ wallet.saleDate }}</td>\\r\\n        <td>{{ wallet.actionValueDay | currency}}</td>\\r\\n        <td>{{ wallet.priceAction | currency}}</td>\\r\\n        <td>{{ wallet.brokerage.name | uppercase }}</td>\\r\\n        <td>{{ wallet.action.description | uppercase }}</td>\\r\\n        <td>{{ wallet.userEntity.nomeCompleto | uppercase }}</td>\\r\\n    </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { AuthenticationService } from '../_services/authentication.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private authenticationService: AuthenticationService\r\n    ) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        const user = this.authenticationService.userValue;\r\n        if (user) {\r\n            // TODO: verifique se a rota está restrita por função\r\n            if (route.data.roles && route.data.roles.indexOf(user.role) === -1) {\r\n                // role not authorised so redirect to home page\r\n                this.router.navigate(['/']);\r\n                return false;\r\n            }\r\n\r\n            // TODO: autorizado para retornar verdadeiro\r\n            return true;\r\n        }\r\n\r\n        // TODO: não conectado, redirecione para a página de login com o URL de retorno\r\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\r\n        return false;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from '../_services/authentication.service';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if ([401, 403].indexOf(err.status) !== -1) {\r\n                // TODO: logout automático se 401 Resposta não autorizada ou 403 Proibida retornada da API\r\n                this.authenticationService.logout();\r\n            }\r\n\r\n            const error = err.error.message || err.statusText;\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\r\n\r\nimport { User } from '../_models/user';\r\nimport { Role } from '../_models/role';\r\n\r\nconst users: User[] = [\r\n    { id: 1, username: 'admin', password: 'admin', firstName: 'Admin', lastName: 'User', role: Role.Admin },\r\n    { id: 2, username: 'user', password: 'user', firstName: 'Normal', lastName: 'User', role: Role.User }\r\n];\r\n\r\n@Injectable()\r\nexport class FakeBackendInterceptor implements HttpInterceptor {\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const { url, method, headers, body } = request;\r\n\r\n        // TODO: agrupar observável atrasado para simular a chamada da API do servidor\r\n        return of(null)\r\n            .pipe(mergeMap(handleRoute))\r\n            .pipe(materialize())\r\n            .pipe(delay(500))\r\n            .pipe(dematerialize());\r\n\r\n        function handleRoute() {\r\n            switch (true) {\r\n                case url.endsWith('/users/authenticate') && method === 'POST':\r\n                    return authenticate();\r\n                case url.endsWith('/users') && method === 'GET':\r\n                    return getUsers();\r\n                case url.match(/\\/users\\/\\d+$/) && method === 'GET':\r\n                    return getUserById();\r\n              default:\r\n                    // TODO: passar por quaisquer solicitações não tratadas acima\r\n                    return next.handle(request);\r\n            }\r\n\r\n        }\r\n\r\n        // route functions\r\n\r\n        function authenticate() {\r\n            const { username, password } = body;\r\n            const user = users.find(x => x.username === username && x.password === password);\r\n            if (!user) return error('Username or password is incorrect');\r\n            return ok({\r\n                id: user.id,\r\n                username: user.username,\r\n                firstName: user.firstName,\r\n                lastName: user.lastName,\r\n                role: user.role,\r\n                token: `fake-jwt-token.${user.id}`\r\n            });\r\n        }\r\n\r\n        function getUsers() {\r\n            if (!isAdmin()) return unauthorized();\r\n            return ok(users);\r\n        }\r\n\r\n        function getUserById() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n\r\n            // somente administradores podem acessar outros registros do usuário\r\n            if (!isAdmin() && currentUser().id !== idFromUrl()) return unauthorized();\r\n\r\n            const user = users.find(x => x.id === idFromUrl());\r\n            return ok(user);\r\n        }\r\n\r\n        // helper functions\r\n\r\n        function ok(body) {\r\n            return of(new HttpResponse({ status: 200, body }));\r\n        }\r\n\r\n        function unauthorized() {\r\n            return throwError({ status: 401, error: { message: 'unauthorized' } });\r\n        }\r\n\r\n        function error(message) {\r\n            return throwError({ status: 400, error: { message } });\r\n        }\r\n\r\n        function isLoggedIn() {\r\n            const authHeader = headers.get('Authorization') || '';\r\n            return authHeader.startsWith('Bearer fake-jwt-token');\r\n        }\r\n\r\n        function isAdmin() {\r\n            return isLoggedIn() && currentUser().role === Role.Admin;\r\n        }\r\n\r\n        function currentUser() {\r\n            if (!isLoggedIn()) return;\r\n            const id = parseInt(headers.get('Authorization').split('.')[1]);\r\n            return users.find(x => x.id === id);\r\n        }\r\n\r\n        function idFromUrl() {\r\n            const urlParts = url.split('/');\r\n            return parseInt(urlParts[urlParts.length - 1]);\r\n        }\r\n    }\r\n}\r\n\r\nexport const fakeBackendProvider = {\r\n    // TODO: usar back-end falso no lugar do serviço Http para desenvolvimento sem back-end\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: FakeBackendInterceptor,\r\n    multi: true\r\n};\r\n","export * from './auth.guard';\r\nexport * from './error.interceptor';\r\nexport * from './fake-backend';\r\nexport * from './jwt.interceptor';","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { environment } from '../../environments/environment';\r\nimport { AuthenticationService } from '../_services/authentication.service';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // TODO: adicione cabeçalho de autenticação com jwt se o usuário estiver conectado e a solicitação for api url\r\n        const user = this.authenticationService.userValue;\r\n        const isLoggedIn = user && user.token;\r\n        const isApiUrl = request.url.startsWith(environment.apiUrl);\r\n        if (isLoggedIn && isApiUrl) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: `Bearer ${user.token}`\r\n                }\r\n            });\r\n        }\r\n        return next.handle(request);\r\n    }\r\n}\r\n","export * from './role';\r\nexport * from './user';","export enum Role {\r\n    User = 'User',\r\n    Admin = 'Admin'\r\n}\r\n","import { Role } from './role';\r\n\r\nexport class User {\r\n    id: number;\r\n    username: string;\r\n    password: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    role: Role;\r\n    token?: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { environment } from '../../environments/environment';\r\nimport { User } from '../_models/user';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {\r\n\r\n    private userSubject: BehaviorSubject<User>;\r\n    public user: Observable<User>;\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private http: HttpClient\r\n    ) {\r\n        this.userSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('user')));\r\n        this.user = this.userSubject.asObservable();\r\n    }\r\n\r\n    public get userValue(): User {\r\n        return this.userSubject.value;\r\n    }\r\n\r\n    login(username: string, password: string) {\r\n        return this.http.post<any>(`${environment.apiUrl}/users/authenticate`, { username, password })\r\n            .pipe(map(user => {\r\n// TODO: armazenar detalhes do usuário e token jwt no armazenamento local para manter o usuário logado entre as atualizações da página\r\n                localStorage.setItem('user', JSON.stringify(user));\r\n                this.userSubject.next(user);\r\n                return user;\r\n            }));\r\n    }\r\n\r\n    logout() {\r\n        // TODO: remover usuário do armazenamento local para desconectar o usuário\r\n        localStorage.removeItem('user');\r\n        this.userSubject.next(null);\r\n        this.router.navigate(['/login']);\r\n    }\r\n}\r\n","export * from './authentication.service';\r\nexport * from './user.service';","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { environment } from '../../environments/environment';\r\nimport { User } from '../_models/user';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAll() {\r\n        return this.http.get<User[]>(`${environment.apiUrl}/users`);\r\n    }\r\n\r\n    getById(id: number) {\r\n        return this.http.get<User>(`${environment.apiUrl}/users/${id}`);\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {HttpClient} from '@angular/common/http';\nimport {map, tap} from 'rxjs/operators';\nimport {Acoes} from './acoes.module';\nimport {AcoesService} from './acoes.service';\nimport {Emolumentos} from '../emolumentos/emolumentos.module';\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-acoes',\n  templateUrl: './acoes.component.html'\n})\nexport class AcoesComponent implements OnInit {\n\n  showSpinner = false;\n  error = '';\n  responseAcoes: Acoes;\n  queryField = new FormControl();\n  results$;\n  texto = '';\n\n  mudaTermo() {\n    this.texto = this.queryField.value;\n  }\n\n  constructor(\n      private acoesService: AcoesService,\n      private http: HttpClient) {\n  }\n\n  ngOnInit(): void {\n    this.showSpinner = true;\n    this.acoesService.getAcoes().subscribe(\n        results$ => this.responseAcoes = results$\n    );\n    if (this.results$ == null) {\n      setTimeout(() => {\n        this.showSpinner = false;\n      }, 1000);\n    }\n  }\n\n  onSearch = () => {\n    let value = this.queryField.value.toUpperCase();\n    if (value && (value = value.trim()) !== '') {\n      this.showSpinner = true;\n      this.results$ = this.http\n          .get(this.acoesService.acoesURLfindName + value)\n          .pipe(\n              tap((res: string) => res),\n              map((res: string) => res)\n          );\n      this.showSpinner = false;\n      this.showNotificatioSearch();\n    }\n  };\n\n  showNotificatioSearch() {\n    const type = ['', 'info', 'success', 'warning', 'danger'];\n\n    const color = Math.floor((Math.random() * 4) + 1);\n\n    $.notify({\n      icon: 'notifications',\n      message: 'Busca Finlizada !<b></b>'\n    }, {\n      type: type[color],\n      timer: 4000,\n      placement: {},\n      template: '<div data-notify=\"container\" class=\"col-xl-4 col-lg-4 col-11 col-sm-4 col-md-4 alert alert-{0} alert-with-icon\" role=\"alert\">' +\n          '<button mat-button  type=\"button\" aria-hidden=\"true\" class=\"close mat-button\" data-notify=\"dismiss\">  <i class=\"material-icons\">close</i></button>' +\n          '<i class=\"material-icons\" data-notify=\"icon\">notifications</i> ' +\n          '<span data-notify=\"title\">{1}</span> ' +\n          '<span data-notify=\"message\">{2}</span>' +\n          '<div class=\"progress\" data-notify=\"progressbar\">' +\n          '<div class=\"progress-bar progress-bar-{0}\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 0%;\"></div>' +\n          '</div>' +\n          '<a href=\"{3}\" target=\"{4}\" data-notify=\"url\"></a>' +\n          '</div>'\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport {Observable} from 'rxjs';\r\nimport {Acoes, RequestCreateAcoes} from '../acoes/acoes.module';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AcoesService {\r\n\r\n  public readonly acoesURListAll = `${environment.acoesURListAll}`;\r\n  public readonly acoesURLfindName    = `${environment.acoesURLfindName}`;\r\n  public readonly acoesURLfindId    = `${environment.acoesURLfindId}`;\r\n  public readonly acoesURLInsert    = `${environment.acoesURLInsert}`;\r\n  public readonly acoesURLPut = `${environment.acoesURLPut}`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAcoes(): Observable<Acoes> {\r\n    return this.http.get<Acoes>(this.acoesURListAll);\r\n  }\r\n\r\n  get(id) {\r\n    return this.http.get(`${this.acoesURLfindId}${id}`);\r\n  }\r\n\r\n  createEmolumentos(request: RequestCreateAcoes): Observable<Acoes> {\r\n    return this.http.post<Acoes>(this.acoesURLInsert, request);\r\n  }\r\n\r\n  update(id, data) {\r\n    return this.http.put(`${this.acoesURLPut}${id}`, data);\r\n  }\r\n\r\n  updateStatus(id, data) {\r\n    return this.http.put(`${this.acoesURLPut}${id}`, data);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { User } from '../_models/user';\nimport { UserService } from '../_services/user.service';\n\n@Component({ templateUrl: 'admin.component.html' })\nexport class AdminComponent implements OnInit {\n\n    loading = false;\n    users: User[] = [];\n\n    constructor(private userService: UserService) { }\n\n    ngOnInit() {\n        this.loading = true;\n        this.userService.getAll().pipe(first()).subscribe(users => {\n            this.loading = false;\n            this.users = users;\n        });\n    }\n}\n","export * from './admin.component';","import { Component} from '@angular/core';\r\n\r\nimport { AuthenticationService } from './_services/authentication.service';\r\nimport { User, Role } from './_models/';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n\r\n  user: User;\r\n\r\n  constructor(private authenticationService: AuthenticationService) {\r\n    this.authenticationService.user.subscribe(x => this.user = x);\r\n  }\r\n\r\n  get isAdmin() {\r\n    return this.user && this.user.role === Role.Admin;\r\n  }\r\n\r\n  logout() {\r\n    this.authenticationService.logout();\r\n  }\r\n\r\n}\r\n","import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule, LOCALE_ID } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AppRoutingModule } from './app.routing';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { HttpModule } from '@angular/http';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\n// used to create fake backend\r\nimport { fakeBackendProvider } from './_helpers';\r\n\r\nimport { AdminLayoutComponent } from './layouts/admin-layout/admin-layout.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { CreateBrokerageComponent } from './brokerages/create-brokerage/create-brokerage.component';\r\nimport { EditBrokerageComponent } from './brokerages/edit-brokerage/edit-brokerage.component';\r\nimport { BrokeragesComponent } from './brokerages/brokerages.component';\r\nimport { CompanyComponent } from './company/company.component';\r\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\r\nimport { CreateCompanyComponent } from './company/create-company/create-company.component';\r\nimport { EditCompanyComponent } from './company/edit-company/edit-company.component';\r\nimport { WalletComponent } from './wallet/wallet.component';\r\nimport { CreateWalletComponent } from './wallet/create-wallet/create-wallet.component';\r\nimport { EditWalletComponent } from './wallet/edit-wallet/edit-wallet.component';\r\n\r\nimport { JwtInterceptor } from './_helpers/jwt.interceptor';\r\nimport { ErrorInterceptor } from './_helpers/error.interceptor';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { EmolumentosComponent } from './emolumentos/emolumentos.component';\r\nimport { UserProfileComponent } from './user-profile/user-profile.component';\r\nimport { SectorComponent } from './sector/sector.component';\r\nimport { AcoesComponent } from './acoes/acoes.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    AppRoutingModule,\r\n    HttpModule,\r\n    HttpClientModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    ReactiveFormsModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    RouterModule,\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    AdminLayoutComponent,\r\n    NavbarComponent,\r\n    SidebarComponent,\r\n\r\n    CreateBrokerageComponent,\r\n    EditBrokerageComponent,\r\n    BrokeragesComponent,\r\n\r\n    CompanyComponent,\r\n    CreateCompanyComponent,\r\n    EditCompanyComponent,\r\n\r\n    WalletComponent,\r\n    CreateWalletComponent,\r\n    EditWalletComponent,\r\n\r\n    HomeComponent,\r\n    AdminComponent,\r\n    LoginComponent,\r\n    EmolumentosComponent,\r\n    UserProfileComponent,\r\n    SectorComponent,\r\n\r\n    EmolumentosComponent,\r\n    AcoesComponent,\r\n\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n    // provider used to create fake backend\r\n    fakeBackendProvider\r\n  ],\r\n  exports: [\r\n    NavbarComponent,\r\n    LoginComponent,\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BrokeragesComponent } from './brokerages/brokerages.component';\r\nimport { CreateBrokerageComponent } from './brokerages/create-brokerage/create-brokerage.component';\r\nimport { EditBrokerageComponent } from './brokerages/edit-brokerage/edit-brokerage.component';\r\nimport { CompanyComponent } from './company/company.component';\r\nimport { EditCompanyComponent } from './company/edit-company/edit-company.component';\r\nimport { CreateCompanyComponent } from './company/create-company/create-company.component';\r\nimport { WalletComponent } from './wallet/wallet.component';\r\nimport { EditWalletComponent } from './wallet/edit-wallet/edit-wallet.component';\r\nimport { CreateWalletComponent } from './wallet/create-wallet/create-wallet.component';\r\n\r\nimport { AdminComponent } from './admin';\r\nimport { LoginComponent } from './login';\r\n\r\nimport { AuthGuard } from './_helpers';\r\nimport { Role } from './_models';\r\nimport {UserProfileComponent} from './user-profile/user-profile.component';\r\nimport {HomeComponent} from './home';\r\nimport {EmolumentosComponent} from './emolumentos';\r\nimport {AcoesComponent} from './acoes/acoes.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UserProfileComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent },\r\n  {\r\n    path: 'admin',\r\n    component: AdminComponent,\r\n    canActivate: [AuthGuard],\r\n    data: { roles: [Role.Admin] }\r\n  },\r\n  {\r\n    path: 'user',\r\n    component: UserProfileComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'home',\r\n    component: HomeComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'emolumentos',\r\n    component: EmolumentosComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  /*brokerages*/\r\n  {\r\n    path: 'brokerages',\r\n    component: BrokeragesComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'create-brokerage',\r\n    component: CreateBrokerageComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'edit-brokerage/:id',\r\n    component: EditBrokerageComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  /*company*/\r\n  {\r\n    path: 'company',\r\n    component: CompanyComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'edit-company/:id',\r\n    component: EditCompanyComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'create-company',\r\n    component: CreateCompanyComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  /*wallet*/\r\n  {\r\n    path: 'wallet',\r\n    component: WalletComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'edit-wallet/:id',\r\n    component: EditWalletComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'create-wallet',\r\n    component: CreateWalletComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  /*acoes*/\r\n  {\r\n    path: 'acoes',\r\n    component: AcoesComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'edit-acoes/:id',\r\n    component: EditWalletComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'create-acoes',\r\n    component: CreateWalletComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n\r\n   /*full*/\r\n  { path: '**',\r\n    redirectTo: ''\r\n  },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","  export class Brokerage {\r\n    id: number;\r\n    name: string;\r\n    cnpj: string;\r\n    address: string;\r\n    addressNeighborhood: string;\r\n    addressCity: string;\r\n    addressState: string;\r\n    swingTrade: number;\r\n    dayTrade: number;\r\n    loginEmail: boolean;\r\n    loginAccessCode: boolean;\r\n    loginCpf: boolean;\r\n    loginPassword: boolean;\r\n    loginToken: boolean;\r\n    iss: number;\r\n    phone: string;\r\n    website: string;\r\n    email: string;\r\n    logo: string;\r\n    status: string;\r\n    tipo: String;\r\n }\r\n\r\n  export interface RequestCreateBrokerage {\r\n    name: string;\r\n    cnpj: string;\r\n    address: string;\r\n    addressNeighborhood: string;\r\n    addressCity: string;\r\n    addressState: string;\r\n    dayTrade: string;\r\n    swingTrade: string;\r\n    iss: string;\r\n    loginEmail: boolean;\r\n    loginAccessCode: boolean;\r\n    loginCpf: boolean;\r\n    loginPassword: boolean;\r\n    loginToken: boolean;\r\n    status: string;\r\n    tipo: string;\r\n    phone: string;\r\n    website: string;\r\n    email: string;\r\n    logo: string;\r\n  }\r\n\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Jyb2tlcmFnZXMvYnJva2VyYWdlcy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { tap, map } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BrokeragesService } from './brokerages.service';\r\nimport { Brokerage } from './brokerage.model';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n  selector: 'app-brokerages',\r\n  templateUrl: './brokerages.component.html',\r\n  styleUrls: ['./brokerages.component.css']\r\n})\r\n\r\nexport class BrokeragesComponent implements OnInit {\r\n\r\n    showSpinner = false;\r\n    responseBrokerages: Brokerage;\r\n    queryField = new FormControl();\r\n    results$;\r\n    texto = '';\r\n\r\n     mudaTermo() {\r\n       this.texto = this.queryField.value;\r\n    }\r\n\r\n    constructor(\r\n        private brokeragesService: BrokeragesService,\r\n        private http: HttpClient) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.showSpinner = true;\r\n        this.brokeragesService.getBrokerages().subscribe(\r\n            res => this.responseBrokerages = res\r\n        );\r\n        if (this.results$ == null) {\r\n            setTimeout(() => {\r\n                this.showSpinner = false;\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n  onSearch() {\r\n      let value = this.queryField.value.toUpperCase();\r\n      if (value && (value = value.trim()) !== '') {\r\n      this.showSpinner = true;\r\n      this.results$ = this.http\r\n          .get(this.brokeragesService.brokeragesURLfindName + value)\r\n          .pipe(\r\n              tap((res: string) => res),\r\n              map((res: string) => res)\r\n          );\r\n          this.showSpinner = false;\r\n          this.showNotificatioSearch();\r\n      }\r\n  };\r\n\r\n    showNotificatioSearch() {\r\n        const type = ['', 'info', 'success', 'warning', 'danger'];\r\n\r\n        const color = Math.floor((Math.random() * 4) + 1);\r\n\r\n        $.notify({\r\n            icon: 'notifications',\r\n            message: 'Busca Finlizada !<b></b>'\r\n        }, {\r\n            type: type[color],\r\n            timer: 4000,\r\n            placement: {},\r\n            template: '<div data-notify=\"container\" class=\"col-xl-4 col-lg-4 col-11 col-sm-4 col-md-4 alert alert-{0} alert-with-icon\" role=\"alert\">' +\r\n                '<button mat-button  type=\"button\" aria-hidden=\"true\" class=\"close mat-button\" data-notify=\"dismiss\">  <i class=\"material-icons\">close</i></button>' +\r\n                '<i class=\"material-icons\" data-notify=\"icon\">notifications</i> ' +\r\n                '<span data-notify=\"title\">{1}</span> ' +\r\n                '<span data-notify=\"message\">{2}</span>' +\r\n                '<div class=\"progress\" data-notify=\"progressbar\">' +\r\n                '<div class=\"progress-bar progress-bar-{0}\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 0%;\"></div>' +\r\n                '</div>' +\r\n                '<a href=\"{3}\" target=\"{4}\" data-notify=\"url\"></a>' +\r\n                '</div>'\r\n        });\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { tap, delay, take, map, catchError } from 'rxjs/operators';\r\nimport {Brokerage, RequestCreateBrokerage} from './brokerage.model';\r\nimport { environment } from '../../environments/environment';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BrokeragesService {\r\n\r\n  public readonly brokeragesURLListarTodos = `${environment.brokeragesURLListarTodos}`;\r\n  public readonly brokeragesURLfindName = `${environment.brokeragesURLfindName}`;\r\n  public readonly brokeragesURLfindId = `${environment.brokeragesURLfindId}`;\r\n  public readonly brokeragesURLfindAccount = `${environment.brokeragesURLfindAccount}`;\r\n  public readonly brokeragesURLPut = `${environment.brokeragesURLPut}`;\r\n  public readonly brokeragesURLPutUpdate = `${environment.brokeragesURLPutUpdate}`;\r\n  public readonly brokeragesURLInsert = `${environment.brokeragesURLInsert}`;\r\n  public readonly brokeragesURLDelete = `${environment.brokeragesURLDelete}`;\r\n  public readonly brokeragesURLpainel = `${environment.brokeragesURLpainel}`;\r\n\r\n\r\n  headers: HttpHeaders = new HttpHeaders({\r\n    'Content-Type': 'application/json',\r\n    'Accept': 'application/json'\r\n  });\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      console.error(error);\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n  getBrokerageid(id: number): Observable<any> {\r\n    return this.http.get(`${this.brokeragesURLfindId}${id}`);\r\n  }\r\n\r\n  getBrokerages(): Observable<Brokerage> {\r\n    return this.http.get<Brokerage>(this.brokeragesURLListarTodos);\r\n  }\r\n\r\n  getBrokeragesPainel(): Observable<Brokerage> {\r\n    return this.http.get<Brokerage>(this.brokeragesURLpainel);\r\n  }\r\n\r\n  loadByID(id: string) {\r\n    return this.http.get<Brokerage>(`${this.brokeragesURLfindId}${id}`).pipe(take(1));\r\n  }\r\n\r\n  createBrokerage(request: RequestCreateBrokerage): Observable<Brokerage> {\r\n    return this.http.post<Brokerage>(this.brokeragesURLInsert, request);\r\n  }\r\n\r\n  private create(brokerage) {\r\n    return this.http.post(this.brokeragesURLInsert, brokerage).pipe(take(1));\r\n  }\r\n\r\n  searchBrokerageName(nome: string) {\r\n    return this.http.get<Brokerage[]>(this.brokeragesURLfindName + nome)\r\n        .pipe(\r\n            delay(1000),\r\n            tap(console.log),\r\n            catchError((err, caught) => err)\r\n        );\r\n  }\r\n\r\n  getBrokerageName(name: string): Observable<any> {\r\n    return this.http.get(`${this.brokeragesURLfindName}${name}`);\r\n  }\r\n\r\n  getBrokerageById(id: number): Observable<Brokerage> {\r\n    const url = `${this.brokeragesURLfindId}${id}`;\r\n    return this.http.get<Brokerage>(url).pipe(\r\n        tap(_ => console.log(`fetched BrokerageB id=${id}`)),\r\n        catchError(this.handleError<Brokerage>(`getBrokerageById id=${id}`))\r\n    );\r\n  }\r\n\r\n  update(id, data) {\r\n    return this.http.put(`${this.brokeragesURLPut}/${id}`, data);\r\n  }\r\n\r\n  updateBrokerage(id: number, value: any): Observable<Object> {\r\n    return this.http.put(`${this.brokeragesURLPut}${id}`, value);\r\n }\r\n  get(id) {\r\n    return this.http.get(`${this.brokeragesURLfindId}/${id}`);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Jyb2tlcmFnZXMvY3JlYXRlLWJyb2tlcmFnZS9jcmVhdGUtYnJva2VyYWdlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\n\r\nimport {Brokerage, RequestCreateBrokerage} from '../brokerage.model';\r\nimport {BrokeragesService} from '../brokerages.service';\r\n\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    const isSubmitted = form && form.submitted;\r\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\r\n  }\r\n}\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n  selector: 'app-create-brokerage',\r\n  templateUrl: './create-brokerage.component.html',\r\n  styleUrls: ['./create-brokerage.component.css']\r\n})\r\nexport class CreateBrokerageComponent implements OnInit {\r\n\r\n  brokerageForm: FormGroup;\r\n  showSpinner = false;\r\n  statusString: string[] = ['INATIVO' , 'ATIVO'];\r\n\r\n  request: RequestCreateBrokerage = {\r\n    name                : '',\r\n    cnpj                : '',\r\n    address             : '',\r\n    addressNeighborhood : '',\r\n    addressCity         : '',\r\n    addressState        : '',\r\n    dayTrade            : '',\r\n    swingTrade          : '',\r\n    iss                 : '5',\r\n    loginAccessCode     : true,\r\n    loginCpf            : true,\r\n    loginEmail          : true,\r\n    loginPassword       : true,\r\n    loginToken          : true,\r\n    status              : 'ATIVO',\r\n    tipo                : '',\r\n    phone               : '',\r\n    website             : '',\r\n    email               : '',\r\n    logo                : '',\r\n  }\r\n\r\n  constructor(private brokeragesService: BrokeragesService,\r\n              private formBuilder: FormBuilder,\r\n              private router: Router\r\n              ) {\r\n  }\r\n\r\n  gerarForm() {\r\n    this.brokerageForm = this.formBuilder.group({\r\n\r\n      name                : [null],\r\n      cnpj: [null,[Validators.required]],\r\n      address             : [null],\r\n      addressNeighborhood : [null],\r\n      addressCity         : [null],\r\n      addressState        : [null],\r\n      dayTrade            : [null],\r\n      swingTrade          : [null],\r\n      iss                 : '5',\r\n      loginAccessCode     : true,\r\n      loginCpf            : true,\r\n      loginEmail          : true,\r\n      loginPassword       : true,\r\n      loginToken          : true,\r\n      status              : 'ATIVO',\r\n      tipo                : [null],\r\n      phone               : [null],\r\n      website             : [null],\r\n      email               : [null],\r\n      logo                : [null]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n   this.gerarForm();\r\n   this.showSpinner = true;\r\n }\r\n\r\n  save() {\r\n    this.brokeragesService.createBrokerage(this.request)\r\n        .subscribe(\r\n            data => {\r\n              this.showNotificationSucesso();\r\n              this.limpa();\r\n            },\r\n            err => {\r\n              this.showNotificationErro();\r\n            })\r\n  }\r\n\r\n  limpa() {\r\n    this.brokerageForm.reset();\r\n  }\r\n\r\n  showNotificationSucesso() {\r\n\r\n    const type = ['', 'info', 'success', 'warning', 'danger'];\r\n    const color = Math.floor((Math.random() * 4) + 1);\r\n\r\n    $.notify({\r\n      icon: 'notifications',\r\n      message: 'Salvo com Suceso !<b></b>'\r\n    }, {\r\n      type: type[color],\r\n      timer: 2000,\r\n      placement: {},\r\n      template: '<div data-notify=\"container\" class=\"col-xl-4 col-lg-4 col-11 col-sm-4 col-md-4 alert alert-{0} alert-with-icon\" role=\"alert\">' +\r\n          '<button mat-button  type=\"button\" aria-hidden=\"true\" class=\"close mat-button\" data-notify=\"dismiss\">  <i class=\"material-icons\">close</i></button>' +\r\n          '<i class=\"material-icons\" data-notify=\"icon\">notifications</i> ' +\r\n          '<span data-notify=\"title\">{1}</span> ' +\r\n          '<span data-notify=\"message\">{2}</span>' +\r\n          '<div class=\"progress\" data-notify=\"progressbar\">' +\r\n          '<div class=\"progress-bar progress-bar-{0}\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 0%;\"></div>' +\r\n          '</div>' +\r\n          '<a href=\"{3}\" target=\"{4}\" data-notify=\"url\"></a>' +\r\n          '</div>'\r\n    });\r\n  }\r\n\r\n  showNotificationErro() {\r\n\r\n    const type = ['', 'info', 'success', 'warning', 'danger'];\r\n    const color = Math.floor((Math.random() * 4) + 1);\r\n\r\n    $.notify({\r\n      icon: 'notifications',\r\n      message: 'Servidor Retornou ERRO !<b></b>'\r\n    }, {\r\n      type: type[color],\r\n      timer: 2000,\r\n      placement: {},\r\n      template: '<div data-notify=\"container\" class=\"col-xl-4 col-lg-4 col-11 col-sm-4 col-md-4 alert alert-{0} alert-with-icon\" role=\"alert\">' +\r\n          '<button mat-button  type=\"button\" aria-hidden=\"true\" class=\"close mat-button\" data-notify=\"dismiss\">  <i class=\"material-icons\">close</i></button>' +\r\n          '<i class=\"material-icons\" data-notify=\"icon\">notifications</i> ' +\r\n          '<span data-notify=\"title\">{1}</span> ' +\r\n          '<span data-notify=\"message\">{2}</span>' +\r\n          '<div class=\"progress\" data-notify=\"progressbar\">' +\r\n          '<div class=\"progress-bar progress-bar-{0}\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 0%;\"></div>' +\r\n          '</div>' +\r\n          '<a href=\"{3}\" target=\"{4}\" data-notify=\"url\"></a>' +\r\n          '</div>'\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Jyb2tlcmFnZXMvZWRpdC1icm9rZXJhZ2UvZWRpdC1icm9rZXJhZ2UuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { Brokerage } from '../brokerage.model';\r\nimport { BrokeragesService } from '../brokerages.service';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    selector: 'app-edit-brokerage',\r\n    templateUrl: './edit-brokerage.component.html',\r\n    styleUrls: ['./edit-brokerage.component.css']\r\n})\r\nexport class EditBrokerageComponent implements OnInit {\r\n\r\n    currentBrokerage = null;\r\n    message = '';\r\n    response = Brokerage;\r\n    statusString: string[] = ['INATIVO' , 'ATIVO'];\r\n\r\n    constructor(\r\n        private brokeragesService: BrokeragesService,\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.message = '';\r\n        this.getBrokerangeX(this.route.snapshot.paramMap.get('id'));\r\n    }\r\n\r\n   updateBrokerageX() {\r\n        this.brokeragesService.update(this.currentBrokerage.id, this.currentBrokerage)\r\n            .subscribe(\r\n                response => {\r\n                    console.log(response);\r\n                    this.message = 'ATUALIZADO';\r\n                },\r\n                error => {\r\n                    console.log(error);\r\n                });\r\n    }\r\n\r\n    getBrokerangeX(id) {\r\n        this.brokeragesService.get(id)\r\n            .subscribe(\r\n                data => {\r\n                    this.currentBrokerage = data;\r\n                    console.log(data);\r\n                },\r\n                error => {\r\n                    console.log(error);\r\n                });\r\n    }\r\n\r\n    showNotificationSucesso(from, align) {\r\n\r\n        const type = ['', 'info', 'success', 'warning', 'danger'];\r\n        const color = Math.floor((Math.random() * 4) + 1);\r\n\r\n        $.notify({\r\n            icon: 'notifications',\r\n            message: 'MODIFICADO COM SUCESSO <b></b>'\r\n        }, {\r\n            type: type[color],\r\n            timer: 4000,\r\n            placement: {\r\n                from: from,\r\n                align: align\r\n            },\r\n            template: '<div data-notify=\"container\" class=\"col-xl-4 col-lg-4 col-11 col-sm-4 col-md-4 alert alert-{0} alert-with-icon\" role=\"alert\">' +\r\n                '<button mat-button  type=\"button\" aria-hidden=\"true\" class=\"close mat-button\" data-notify=\"dismiss\">  <i class=\"material-icons\">close</i></button>' +\r\n                '<i class=\"material-icons\" data-notify=\"icon\">notifications</i> ' +\r\n                '<span data-notify=\"title\">{1}</span> ' +\r\n                '<span data-notify=\"message\">{2}</span>' +\r\n                '<div class=\"progress\" data-notify=\"progressbar\">' +\r\n                '<div class=\"progress-bar progress-bar-{0}\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 0%;\"></div>' +\r\n                '</div>' +\r\n                '<a href=\"{3}\" target=\"{4}\" data-notify=\"url\"></a>' +\r\n                '</div>'\r\n        });\r\n    }\r\n\r\n   showNotificationErro(from, align) {\r\n        const type = ['danger'];\r\n\r\n        const color = Math.floor((Math.random() * 4) + 1);\r\n\r\n        $.notify({\r\n            icon: 'notifications',\r\n            message: 'ATUALIZADO COM SUCESSO <b></b>'\r\n\r\n        }, {\r\n            type: type[color],\r\n            timer: 4000,\r\n            placement: {\r\n                from: from,\r\n                align: align\r\n            },\r\n            template: '<div data-notify=\"container\" class=\"col-xl-4 col-lg-4 col-11 col-sm-4 col-md-4 alert alert-{0} alert-with-icon\" role=\"alert\">' +\r\n                '<button mat-button  type=\"button\" aria-hidden=\"true\" class=\"close mat-button\" data-notify=\"dismiss\">  <i class=\"material-icons\">close</i></button>' +\r\n                '<i class=\"material-icons\" data-notify=\"icon\">notifications</i> ' +\r\n                '<span data-notify=\"title\">{1}</span> ' +\r\n                '<span data-notify=\"message\">{2}</span>' +\r\n                '<div class=\"progress\" data-notify=\"progressbar\">' +\r\n                '<div class=\"progress-bar progress-bar-{0}\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 0%;\"></div>' +\r\n                '</div>' +\r\n                '<a href=\"{3}\" target=\"{4}\" data-notify=\"url\"></a>' +\r\n                '</div>'\r\n        });\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport {tap, map, first} from 'rxjs/operators';\r\nimport { HttpClient} from '@angular/common/http';\r\n\r\nimport { CompanyService } from './company.service';\r\nimport { Company } from './company.module';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    selector: 'app-company',\r\n    templateUrl: './company.component.html'\r\n})\r\nexport class CompanyComponent implements OnInit {\r\n\r\n  showSpinner = false;\r\n  responseCompany: Company;\r\n  queryField = new FormControl();\r\n  results$;\r\n  texto = '';\r\n\r\n  mudaTermo() {\r\n    this.texto = this.queryField.value;\r\n  }\r\n\r\n  constructor(\r\n              private companyService: CompanyService,\r\n              private http: HttpClient) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.showSpinner = true;\r\n    this.companyService.getCompany().subscribe(\r\n        results$ => this.responseCompany = results$\r\n    );\r\n    if (this.results$ == null) {\r\n      setTimeout(() => {\r\n        this.showSpinner = false;\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  onSearch = () => {\r\n    let value = this.queryField.value.toUpperCase();\r\n    if (value && (value = value.trim()) !== '') {\r\n      this.showSpinner = true;\r\n      this.results$ = this.http\r\n          .get(this.companyService.companyURLfindName + value)\r\n          .pipe(\r\n              tap((res: string) => res),\r\n              map((res: string) => res)\r\n          );\r\n      this.showSpinner = false;\r\n      this.showNotificatioSearch();\r\n    }\r\n  };\r\n\r\n  showNotificatioSearch() {\r\n    const type = ['', 'info', 'success', 'warning', 'danger'];\r\n\r\n    const color = Math.floor((Math.random() * 4) + 1);\r\n\r\n    $.notify({\r\n      icon: 'notifications',\r\n      message: 'Busca Finlizada !<b></b>'\r\n    }, {\r\n      type: type[color],\r\n      timer: 4000,\r\n      placement: {},\r\n      template: '<div data-notify=\"container\" class=\"col-xl-4 col-lg-4 col-11 col-sm-4 col-md-4 alert alert-{0} alert-with-icon\" role=\"alert\">' +\r\n          '<button mat-button  type=\"button\" aria-hidden=\"true\" class=\"close mat-button\" data-notify=\"dismiss\">  <i class=\"material-icons\">close</i></button>' +\r\n          '<i class=\"material-icons\" data-notify=\"icon\">notifications</i> ' +\r\n          '<span data-notify=\"title\">{1}</span> ' +\r\n          '<span data-notify=\"message\">{2}</span>' +\r\n          '<div class=\"progress\" data-notify=\"progressbar\">' +\r\n          '<div class=\"progress-bar progress-bar-{0}\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 0%;\"></div>' +\r\n          '</div>' +\r\n          '<a href=\"{3}\" target=\"{4}\" data-notify=\"url\"></a>' +\r\n          '</div>'\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Company, RequestCreateCompany} from './company.module';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CompanyService {\r\n\r\n  public readonly companyURListAll = `${environment.companyURListAll}`;\r\n  public readonly companyURLfindName    = `${environment.companyURLfindName}`;\r\n  public readonly companyURLfindId    = `${environment.companyURLfindId}`;\r\n  public readonly companyURLInsert    = `${environment.companyURLInsert}`;\r\n  public readonly companyURLPut = `${environment.companyURLPut}`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getCompany(): Observable<Company> {\r\n    return this.http.get<Company>(this.companyURListAll);\r\n  }\r\n\r\n  get(id) {\r\n    return this.http.get(`${this.companyURLfindId}${id}`);\r\n  }\r\n\r\n  createCompany(request: RequestCreateCompany): Observable<Company> {\r\n    return this.http.post<Company>(this.companyURLInsert, request);\r\n  }\r\n\r\n  update(id, data) {\r\n    return this.http.put(`${this.companyURLPut}${id}`, data);\r\n  }\r\n\r\n  updateStatus(id, data) {\r\n    return this.http.put(`${this.companyURLPut}${id}`, data);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBhbnkvY3JlYXRlLWNvbXBhbnkvY3JlYXRlLWNvbXBhbnkuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { RequestCreateCompany } from '../company.module';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { CompanyService } from '../company.service';\r\nimport { SectorService } from '../../sector/sector.service';\r\nimport { Sector } from '../../sector/sector.module';\r\nimport { Observable } from 'rxjs';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    selector: 'app-create-company',\r\n    templateUrl: './create-company.component.html',\r\n    styleUrls: ['./create-company.component.css']\r\n})\r\nexport class CreateCompanyComponent implements OnInit {\r\n\r\n    showSpinner = false;\r\n    companyForm: FormGroup;\r\n    sectores$: Observable<Sector[]>;\r\n    statusString: string[] = ['INATIVO' , 'ATIVO'];\r\n\r\n    // TODO: usado para salvar\r\n    request: RequestCreateCompany = {\r\n        cnpj: '',\r\n        mainActivity: '',\r\n        market: '',\r\n        name: '',\r\n        setorialClassification: '',\r\n        site: '',\r\n        status: '',\r\n        sector: null\r\n    }\r\n       constructor(private companyService: CompanyService,\r\n                private sectorService: SectorService,\r\n                private formBuilder: FormBuilder,\r\n    ) {\r\n    }\r\n\r\n    // TODO: usado para gerar reconhecimento do combo\r\n    gerarForm() {\r\n        this.companyForm = this.formBuilder.group({\r\n            cnpj: [null, [ Validators.required ]],\r\n            mainActivity: [null],\r\n            market: [null],\r\n            name: [null],\r\n            setorialClassification: [null],\r\n            site: [null],\r\n            status: [null],\r\n            sector: [null]\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.gerarForm();\r\n        this.showSpinner = true;\r\n        // TODO: Combo para Sector\r\n        this.sectores$ = this.sectorService.getSector();\r\n    }\r\n\r\n    save() {\r\n        this.companyService.createCompany(this.request)\r\n            .subscribe(\r\n                data => {\r\n                    this.showNotificationSucesso();\r\n                    this.limpa();\r\n                },\r\n                err => {\r\n                    this.showNotificationErro();\r\n                })\r\n    }\r\n\r\n    limpa() {\r\n        this.companyForm.reset();\r\n    }\r\n\r\n    showNotificationSucesso() {\r\n\r\n        const type = ['', 'info', 'success', 'warning', 'danger'];\r\n        const color = Math.floor((Math.random() * 4) + 1);\r\n\r\n        $.notify({\r\n            icon: 'notifications',\r\n            message: 'Cadastrado com Sucesso <b></b>'\r\n        }, {\r\n            type: type[color],\r\n            timer: 4000,\r\n            placement: {},\r\n            template: '<div data-notify=\"container\" class=\"col-xl-4 col-lg-4 col-11 col-sm-4 col-md-4 alert alert-{0} alert-with-icon\" role=\"alert\">' +\r\n                '<button mat-button  type=\"button\" aria-hidden=\"true\" class=\"close mat-button\" data-notify=\"dismiss\">  <i class=\"material-icons\">close</i></button>' +\r\n                '<i class=\"material-icons\" data-notify=\"icon\">notifications</i> ' +\r\n                '<span data-notify=\"title\">{1}</span> ' +\r\n                '<span data-notify=\"message\">{2}</span>' +\r\n                '<div class=\"progress\" data-notify=\"progressbar\">' +\r\n                '<div class=\"progress-bar progress-bar-{0}\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 0%;\"></div>' +\r\n                '</div>' +\r\n                '<a href=\"{3}\" target=\"{4}\" data-notify=\"url\"></a>' +\r\n                '</div>'\r\n        });\r\n    }\r\n\r\n    showNotificationErro() {\r\n\r\n        const type = ['', 'info', 'success', 'warning', 'danger'];\r\n        const color = Math.floor((Math.random() * 4) + 1);\r\n\r\n        $.notify({\r\n            icon: 'notifications',\r\n            message: 'Servidor Retornou ERRO !<b></b>'\r\n        }, {\r\n            type: type[color],\r\n            timer: 4000,\r\n            placement: {},\r\n            template: '<div data-notify=\"container\" class=\"col-xl-4 col-lg-4 col-11 col-sm-4 col-md-4 alert alert-{0} alert-with-icon\" role=\"alert\">' +\r\n                '<button mat-button  type=\"button\" aria-hidden=\"true\" class=\"close mat-button\" data-notify=\"dismiss\">  <i class=\"material-icons\">close</i></button>' +\r\n                '<i class=\"material-icons\" data-notify=\"icon\">notifications</i> ' +\r\n                '<span data-notify=\"title\">{1}</span> ' +\r\n                '<span data-notify=\"message\">{2}</span>' +\r\n                '<div class=\"progress\" data-notify=\"progressbar\">' +\r\n                '<div class=\"progress-bar progress-bar-{0}\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 0%;\"></div>' +\r\n                '</div>' +\r\n                '<a href=\"{3}\" target=\"{4}\" data-notify=\"url\"></a>' +\r\n                '</div>'\r\n        });\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBhbnkvZWRpdC1jb21wYW55L2VkaXQtY29tcGFueS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CompanyService } from '../company.service';\r\nimport { RequestCreateCompany } from '../company.module';\r\nimport { Sector } from '../../sector/sector.module';\r\nimport { SectorService } from '../../sector/sector.service';\r\nimport { Observable } from 'rxjs';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n  selector: 'app-edit-company',\r\n  templateUrl: './edit-company.component.html',\r\n  styleUrls: ['./edit-company.component.css']\r\n})\r\n\r\nexport class EditCompanyComponent implements OnInit {\r\n\r\n  showSpinner = false;\r\n  companyForm: FormGroup;\r\n  sectores$: Observable<Sector[]>;\r\n  currentCompany = null;\r\n  statusString: string[] = ['INATIVO' , 'ATIVO'];\r\n\r\n  // TODO: usado para salvar\r\n  request: RequestCreateCompany = {\r\n    cnpj: '',\r\n    mainActivity: '',\r\n    market: '',\r\n    name: '',\r\n    setorialClassification: '',\r\n    site: '',\r\n    status: '',\r\n    sector: null\r\n  }\r\n\r\n  constructor(private companyService: CompanyService,\r\n              private sectorService: SectorService,\r\n              private formBuilder: FormBuilder,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n  ) {\r\n  }\r\n\r\n  // TODO: usado para gerar reconhecimento do combo\r\n  gerarForm() {\r\n    this.companyForm = this.formBuilder.group({\r\n      cnpj: [null, [ Validators.required ]],\r\n      mainActivity: [null],\r\n      market: [null],\r\n      name: [null],\r\n      setorialClassification: [null],\r\n      site: [null],\r\n      status: [null],\r\n      sector: [null]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.gerarForm();\r\n\r\n    // TODO: Get para id/name... Company\r\n    this.getCompany(this.route.snapshot.paramMap.get('id'));\r\n\r\n    // TODO: Combo para Sector\r\n    this.sectores$ = this.sectorService.getSector();\r\n  }\r\n\r\n  updateCompany() {\r\n    this.companyService.update(this.currentCompany.id, this.currentCompany)\r\n        .subscribe(\r\n            response => {\r\n              console.log(response);\r\n              this.showNotificationSucesso();\r\n              console.log(response);\r\n            },\r\n            error => {\r\n              console.log(error);\r\n              this.showNotificationErro();\r\n            });\r\n  }\r\n\r\n  getCompany(id) {\r\n    this.companyService.get(id)\r\n        .subscribe(\r\n            data => {\r\n              this.currentCompany = data;\r\n              console.log(data);\r\n            },\r\n            error => {\r\n              console.log(error);\r\n              this.showNotificationErro();\r\n            });\r\n  }\r\n\r\n  showNotificationSucesso() {\r\n    const type = ['', 'info', 'success', 'warning', 'danger'];\r\n    const color = Math.floor((Math.random() * 4) + 1);\r\n    $.notify({\r\n      icon: 'notifications',\r\n      message: 'Atualizado com Sucesso !<b></b>'\r\n\r\n    }, {\r\n      type: type[color],\r\n      timer: 4000,\r\n      placement: {},\r\n      template: '<div data-notify=\"container\" class=\"col-xl-4 col-lg-4 col-11 col-sm-4 col-md-4 alert alert-{0} alert-with-icon\" role=\"alert\">' +\r\n          '<button mat-button  type=\"button\" aria-hidden=\"true\" class=\"close mat-button\" data-notify=\"dismiss\">  <i class=\"material-icons\">close</i></button>' +\r\n          '<i class=\"material-icons\" data-notify=\"icon\">notifications</i> ' +\r\n          '<span data-notify=\"title\">{1}</span> ' +\r\n          '<span data-notify=\"message\">{2}</span>' +\r\n          '<div class=\"progress\" data-notify=\"progressbar\">' +\r\n          '<div class=\"progress-bar progress-bar-{0}\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 0%;\"></div>' +\r\n          '</div>' +\r\n          '<a href=\"{3}\" target=\"{4}\" data-notify=\"url\"></a>' +\r\n          '</div>'\r\n    });\r\n  }\r\n\r\n  showNotificationErro() {\r\n    const type = ['danger'];\r\n    const color = Math.floor((Math.random() * 4) + 1);\r\n    $.notify({\r\n      icon: 'notifications',\r\n      message: 'Tente Novamente, nada foi atualizado !<b></b>'\r\n    }, {\r\n      type: type[color],\r\n      timer: 4000,\r\n      placement: {},\r\n      template: '<div data-notify=\"container\" class=\"col-xl-4 col-lg-4 col-11 col-sm-4 col-md-4 alert alert-{0} alert-with-icon\" role=\"alert\">' +\r\n          '<button mat-button  type=\"button\" aria-hidden=\"true\" class=\"close mat-button\" data-notify=\"dismiss\">  <i class=\"material-icons\">close</i></button>' +\r\n          '<i class=\"material-icons\" data-notify=\"icon\">notifications</i> ' +\r\n          '<span data-notify=\"title\">{1}</span> ' +\r\n          '<span data-notify=\"message\">{2}</span>' +\r\n          '<div class=\"progress\" data-notify=\"progressbar\">' +\r\n          '<div class=\"progress-bar progress-bar-{0}\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 0%;\"></div>' +\r\n          '</div>' +\r\n          '<a href=\"{3}\" target=\"{4}\" data-notify=\"url\"></a>' +\r\n          '</div>'\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, ElementRef } from '@angular/core';\r\nimport { ROUTES } from '../sidebar/sidebar.component';\r\nimport {Location, LocationStrategy, PathLocationStrategy} from '@angular/common';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-navbar',\r\n    templateUrl: './navbar.component.html',\r\n    styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n    private listTitles: any[];\r\n    location: Location;\r\n    mobile_menu_visible: any = 0;\r\n    private toggleButton: any;\r\n    private sidebarVisible: boolean;\r\n\r\n    constructor(location: Location,  private element: ElementRef, private router: Router) {\r\n        this.location = location;\r\n        this.sidebarVisible = false;\r\n    }\r\n\r\n    ngOnInit(){\r\n        this.listTitles = ROUTES.filter(listTitle => listTitle);\r\n        const navbar: HTMLElement = this.element.nativeElement;\r\n        this.toggleButton = navbar.getElementsByClassName('navbar-toggler')[0];\r\n        this.router.events.subscribe((event) => {\r\n            this.sidebarClose();\r\n            var $layer: any = document.getElementsByClassName('close-layer')[0];\r\n            if ($layer) {\r\n                $layer.remove();\r\n                this.mobile_menu_visible = 0;\r\n            }\r\n        });\r\n    }\r\n\r\n    sidebarOpen() {\r\n        const toggleButton = this.toggleButton;\r\n        const body = document.getElementsByTagName('body')[0];\r\n        setTimeout(function(){\r\n            toggleButton.classList.add('toggled');\r\n        }, 500);\r\n\r\n        body.classList.add('nav-open');\r\n\r\n        this.sidebarVisible = true;\r\n    };\r\n    sidebarClose() {\r\n        const body = document.getElementsByTagName('body')[0];\r\n        this.toggleButton.classList.remove('toggled');\r\n        this.sidebarVisible = false;\r\n        body.classList.remove('nav-open');\r\n    };\r\n    sidebarToggle() {\r\n        // const toggleButton = this.toggleButton;\r\n        // const body = document.getElementsByTagName('body')[0];\r\n        var $toggle = document.getElementsByClassName('navbar-toggler')[0];\r\n\r\n        if (this.sidebarVisible === false) {\r\n            this.sidebarOpen();\r\n        } else {\r\n            this.sidebarClose();\r\n        }\r\n        const body = document.getElementsByTagName('body')[0];\r\n\r\n        if (this.mobile_menu_visible == 1) {\r\n            // $('html').removeClass('nav-open');\r\n            body.classList.remove('nav-open');\r\n            if ($layer) {\r\n                $layer.remove();\r\n            }\r\n            setTimeout(function() {\r\n                $toggle.classList.remove('toggled');\r\n            }, 400);\r\n\r\n            this.mobile_menu_visible = 0;\r\n        } else {\r\n            setTimeout(function() {\r\n                $toggle.classList.add('toggled');\r\n            }, 430);\r\n\r\n            var $layer = document.createElement('div');\r\n            $layer.setAttribute('class', 'close-layer');\r\n\r\n\r\n            if (body.querySelectorAll('.main-panel')) {\r\n                document.getElementsByClassName('main-panel')[0].appendChild($layer);\r\n            }else if (body.classList.contains('off-canvas-sidebar')) {\r\n                document.getElementsByClassName('wrapper-full-page')[0].appendChild($layer);\r\n            }\r\n\r\n            setTimeout(function() {\r\n                $layer.classList.add('visible');\r\n            }, 100);\r\n\r\n            $layer.onclick = function() { //asign a function\r\n                body.classList.remove('nav-open');\r\n                this.mobile_menu_visible = 0;\r\n                $layer.classList.remove('visible');\r\n                setTimeout(function() {\r\n                    $layer.remove();\r\n                    $toggle.classList.remove('toggled');\r\n                }, 400);\r\n            }.bind(this);\r\n\r\n            body.classList.add('nav-open');\r\n            this.mobile_menu_visible = 1;\r\n\r\n        }\r\n    };\r\n\r\n    getTitle(){\r\n        var titlee = this.location.prepareExternalUrl(this.location.path());\r\n        if(titlee.charAt(0) === '#'){\r\n            titlee = titlee.slice( 1 );\r\n        }\r\n\r\n        for(var item = 0; item < this.listTitles.length; item++){\r\n            if(this.listTitles[item].path === titlee){\r\n                return this.listTitles[item].title;\r\n            }\r\n        }\r\n        return 'Dashboard';\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2lkZWJhci9zaWRlYmFyLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\ndeclare const $: any;\r\ndeclare interface RouteInfo {\r\n    path: string;\r\n    title: string;\r\n    icon: string;\r\n    class: string;\r\n}\r\nexport const ROUTES: RouteInfo[] = [\r\n    { path: '/brokerages', title: 'Listar Corretoras',  icon:'dialpad', class: '' },\r\n    { path: '/create-brokerage', title: 'Nova Corretora',  icon:'border_color', class: '' },\r\n    { path: '/company', title: 'Listar Empresas',  icon:'work', class: '' },\r\n    { path: '/create-company', title: 'Nova Empresa',  icon:'border_color', class: '' },\r\n    { path: '/wallet', title: 'Listar Carteiras',  icon:'attach_money', class: '' },\r\n    { path: '/create-wallet', title: 'Nova Carteira',  icon:'monetization_on', class: '' },\r\n];\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.css']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n  menuItems: any[];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.menuItems = ROUTES.filter(menuItem => menuItem);\r\n  }\r\n  isMobileMenu() {\r\n      if ($(window).width() > 991) {\r\n          return false;\r\n      }\r\n      return true;\r\n  };\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { EmolumentosService } from './emolumentos.service';\nimport { map, tap } from 'rxjs/operators';\nimport { Emolumentos } from './emolumentos.module';\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-emolumentos',\n  templateUrl: './emolumentos.component.html'\n\n})\nexport class EmolumentosComponent implements OnInit {\n\n  showSpinner = false;\n  error = '';\n  responseEmolumentos: Emolumentos;\n  queryField = new FormControl();\n  results$;\n  texto = '';\n\n  mudaTermo() {\n    this.texto = this.queryField.value;\n  }\n\n  constructor(\n      private emolumentosService: EmolumentosService,\n      private http: HttpClient) {\n  }\n\n  ngOnInit(): void {\n    this.showSpinner = true;\n    this.emolumentosService.getEmolumentos().subscribe(\n        results$ => this.responseEmolumentos = results$\n    );\n    if (this.results$ == null) {\n      setTimeout(() => {\n        this.showSpinner = false;\n      }, 1000);\n    }\n  }\n\n  onSearch = () => {\n    let value = this.queryField.value.toUpperCase();\n    if (value && (value = value.trim()) !== '') {\n      this.showSpinner = true;\n      this.results$ = this.http\n          .get(this.emolumentosService.emolumentosURLfindName + value)\n          .pipe(\n              tap((res: string) => res),\n              map((res: string) => res)\n          );\n      this.showSpinner = false;\n      this.showNotificatioSearch();\n    }\n  };\n\n  showNotificatioSearch() {\n    const type = ['', 'info', 'success', 'warning', 'danger'];\n\n    const color = Math.floor((Math.random() * 4) + 1);\n\n    $.notify({\n      icon: 'notifications',\n      message: 'Busca Finlizada !<b></b>'\n    }, {\n      type: type[color],\n      timer: 4000,\n      placement: {},\n      template: '<div data-notify=\"container\" class=\"col-xl-4 col-lg-4 col-11 col-sm-4 col-md-4 alert alert-{0} alert-with-icon\" role=\"alert\">' +\n          '<button mat-button  type=\"button\" aria-hidden=\"true\" class=\"close mat-button\" data-notify=\"dismiss\">  <i class=\"material-icons\">close</i></button>' +\n          '<i class=\"material-icons\" data-notify=\"icon\">notifications</i> ' +\n          '<span data-notify=\"title\">{1}</span> ' +\n          '<span data-notify=\"message\">{2}</span>' +\n          '<div class=\"progress\" data-notify=\"progressbar\">' +\n          '<div class=\"progress-bar progress-bar-{0}\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 0%;\"></div>' +\n          '</div>' +\n          '<a href=\"{3}\" target=\"{4}\" data-notify=\"url\"></a>' +\n          '</div>'\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { Emolumentos, RequestCreateEmolumentos } from '../emolumentos/emolumentos.module';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmolumentosService {\r\n\r\n  public readonly emolumentosURListAll = `${environment.emolumentosURListAll}`;\r\n  public readonly emolumentosURLfindName    = `${environment.emolumentosURLfindName}`;\r\n  public readonly emolumentosURLfindId    = `${environment.emolumentosURLfindId}`;\r\n  public readonly emolumentosURLInsert    = `${environment.emolumentosURLInsert}`;\r\n  public readonly emolumentosURLPut = `${environment.emolumentosURLPut}`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getEmolumentos(): Observable<Emolumentos> {\r\n    return this.http.get<Emolumentos>(this.emolumentosURListAll);\r\n  }\r\n\r\n  get(id) {\r\n    return this.http.get(`${this.emolumentosURLfindId}${id}`);\r\n  }\r\n\r\n  createEmolumentos(request: RequestCreateEmolumentos): Observable<Emolumentos> {\r\n    return this.http.post<Emolumentos>(this.emolumentosURLInsert, request);\r\n  }\r\n\r\n  update(id, data) {\r\n    return this.http.put(`${this.emolumentosURLPut}${id}`, data);\r\n  }\r\n\r\n  updateStatus(id, data) {\r\n    return this.http.put(`${this.emolumentosURLPut}${id}`, data);\r\n  }\r\n}\r\n","export * from './emolumentos.component';\r\n","import {Component, OnInit} from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { User } from '../_models';\nimport { UserService, AuthenticationService } from '../_services';\n\n@Component({ templateUrl: 'home.component.html' })\nexport class HomeComponent implements OnInit {\n\n    loading = false;\n    user: User;\n    userFromApi: User;\n\n    constructor(\n        private userService: UserService,\n        private authenticationService: AuthenticationService\n    ) {\n        this.user = this.authenticationService.userValue;\n    }\n\n    ngOnInit() {\n        this.loading = true;\n        this.userService.getById(this.user.id).pipe(first()).subscribe(user => {\n            this.loading = false;\n            this.userFromApi = user;\n        });\n    }\n}\n","export * from './home.component';","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dHMvYWRtaW4tbGF5b3V0L2FkbWluLWxheW91dC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { Location, LocationStrategy, PathLocationStrategy, PopStateEvent } from '@angular/common';\r\nimport 'rxjs/add/operator/filter';\r\nimport { Router, NavigationEnd, NavigationStart } from '@angular/router';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\nimport * as $ from \"jquery\";\r\n\r\n@Component({\r\n  selector: 'app-admin-layout',\r\n  templateUrl: './admin-layout.component.html',\r\n  styleUrls: ['./admin-layout.component.scss']\r\n})\r\nexport class AdminLayoutComponent implements OnInit {\r\n  private _router: Subscription;\r\n  private lastPoppedUrl: string;\r\n  private yScrollStack: number[] = [];\r\n\r\n  constructor( public location: Location, private router: Router) {}\r\n\r\n  ngOnInit() {\r\n      const isWindows = navigator.platform.indexOf('Win') > -1 ? true : false;\r\n\r\n      if (isWindows && !document.getElementsByTagName('body')[0].classList.contains('sidebar-mini')) {\r\n          // if we are on windows OS we activate the perfectScrollbar function\r\n\r\n          document.getElementsByTagName('body')[0].classList.add('perfect-scrollbar-on');\r\n      } else {\r\n          document.getElementsByTagName('body')[0].classList.remove('perfect-scrollbar-off');\r\n      }\r\n      const elemMainPanel = <HTMLElement>document.querySelector('.main-panel');\r\n      const elemSidebar = <HTMLElement>document.querySelector('.sidebar .sidebar-wrapper');\r\n\r\n      this.location.subscribe((ev:PopStateEvent) => {\r\n          this.lastPoppedUrl = ev.url;\r\n      });\r\n       this.router.events.subscribe((event:any) => {\r\n          if (event instanceof NavigationStart) {\r\n             if (event.url != this.lastPoppedUrl)\r\n                 this.yScrollStack.push(window.scrollY);\r\n         } else if (event instanceof NavigationEnd) {\r\n             if (event.url == this.lastPoppedUrl) {\r\n                 this.lastPoppedUrl = undefined;\r\n                 window.scrollTo(0, this.yScrollStack.pop());\r\n             } else\r\n                 window.scrollTo(0, 0);\r\n         }\r\n      });\r\n      this._router = this.router.events.filter(event => event instanceof NavigationEnd).subscribe((event: NavigationEnd) => {\r\n           elemMainPanel.scrollTop = 0;\r\n           elemSidebar.scrollTop = 0;\r\n      });\r\n      if (window.matchMedia(`(min-width: 960px)`).matches && !this.isMac()) {\r\n          let ps = new PerfectScrollbar(elemMainPanel);\r\n          ps = new PerfectScrollbar(elemSidebar);\r\n      }\r\n\r\n      const window_width = $(window).width();\r\n      let $sidebar = $('.sidebar');\r\n      let $sidebar_responsive = $('body > .navbar-collapse');\r\n      let $sidebar_img_container = $sidebar.find('.sidebar-background');\r\n\r\n\r\n      if(window_width > 767){\r\n          if($('.fixed-plugin .dropdown').hasClass('show-dropdown')){\r\n              $('.fixed-plugin .dropdown').addClass('open');\r\n          }\r\n\r\n      }\r\n\r\n      $('.fixed-plugin a').click(function(event){\r\n        // Alex if we click on switch, stop propagation of the event, so the dropdown will not be hide, otherwise we set the  section active\r\n          if($(this).hasClass('switch-trigger')){\r\n              if(event.stopPropagation){\r\n                  event.stopPropagation();\r\n              }\r\n              else if(window.event){\r\n                 window.event.cancelBubble = true;\r\n              }\r\n          }\r\n      });\r\n\r\n      $('.fixed-plugin .badge').click(function(){\r\n          let $full_page_background = $('.full-page-background');\r\n\r\n\r\n          $(this).siblings().removeClass('active');\r\n          $(this).addClass('active');\r\n\r\n          var new_color = $(this).data('color');\r\n\r\n          if($sidebar.length !== 0){\r\n              $sidebar.attr('data-color', new_color);\r\n          }\r\n\r\n          if($sidebar_responsive.length != 0){\r\n              $sidebar_responsive.attr('data-color',new_color);\r\n          }\r\n      });\r\n\r\n      $('.fixed-plugin .img-holder').click(function(){\r\n          let $full_page_background = $('.full-page-background');\r\n\r\n          $(this).parent('li').siblings().removeClass('active');\r\n          $(this).parent('li').addClass('active');\r\n\r\n\r\n          var new_image = $(this).find(\"img\").attr('src');\r\n\r\n          if($sidebar_img_container.length !=0 ){\r\n              $sidebar_img_container.fadeOut('fast', function(){\r\n                 $sidebar_img_container.css('background-image','url(\"' + new_image + '\")');\r\n                 $sidebar_img_container.fadeIn('fast');\r\n              });\r\n          }\r\n\r\n          if($full_page_background.length != 0){\r\n\r\n              $full_page_background.fadeOut('fast', function(){\r\n                 $full_page_background.css('background-image','url(\"' + new_image + '\")');\r\n                 $full_page_background.fadeIn('fast');\r\n              });\r\n          }\r\n\r\n          if($sidebar_responsive.length != 0){\r\n              $sidebar_responsive.css('background-image','url(\"' + new_image + '\")');\r\n          }\r\n      });\r\n  }\r\n  ngAfterViewInit() {\r\n      this.runOnRouteChange();\r\n  }\r\n  isMaps(path){\r\n      var titlee = this.location.prepareExternalUrl(this.location.path());\r\n      titlee = titlee.slice( 1 );\r\n      if(path == titlee){\r\n          return false;\r\n      }\r\n      else {\r\n          return true;\r\n      }\r\n  }\r\n  runOnRouteChange(): void {\r\n    if (window.matchMedia(`(min-width: 960px)`).matches && !this.isMac()) {\r\n      const elemMainPanel = <HTMLElement>document.querySelector('.main-panel');\r\n      const ps = new PerfectScrollbar(elemMainPanel);\r\n      ps.update();\r\n    }\r\n  }\r\n  isMac(): boolean {\r\n      let bool = false;\r\n      if (navigator.platform.toUpperCase().indexOf('MAC') >= 0 || navigator.platform.toUpperCase().indexOf('IPAD') >= 0) {\r\n          bool = true;\r\n      }\r\n      return bool;\r\n  }\r\n\r\n}\r\n","export * from './login.component';","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from '../_services/authentication.service';\r\n\r\n@Component({ templateUrl: 'login.component.html' })\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  error = '';\r\n\r\n  constructor(\r\n      private formBuilder: FormBuilder,\r\n      private route: ActivatedRoute,\r\n      private router: Router,\r\n      private authenticationService: AuthenticationService\r\n  ) {\r\n\r\n    // TODO: redirecionar para home se já estiver logado\r\n    if (this.authenticationService.userValue) {\r\n      this.router.navigate(['/home']);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required]\r\n    });\r\n\r\n    // TODO: obter URL de retorno a partir dos parâmetros da rota ou padrão para '/'\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n\r\n  // TODO: getter de conveniência para fácil acesso aos campos do formulário\r\n  get f() { return this.loginForm.controls; }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // TODO: pare aqui se o formulário for inválido\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.authenticationService.login(this.f.username.value, this.f.password.value)\r\n        .pipe(first())\r\n        .subscribe(\r\n            data => {\r\n              this.router.navigate([this.returnUrl]);\r\n            },\r\n            error => {\r\n              this.error = error;\r\n              this.loading = false;\r\n            });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlY3Rvci9zZWN0b3IuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sector',\r\n  templateUrl: './sector.component.html',\r\n  styleUrls: ['./sector.component.css']\r\n})\r\nexport class SectorComponent implements OnInit {\r\n\r\n  φ = '1,61803398874988';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nimport { Sector} from '../sector/sector.module';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SectorService {\r\n\r\n  public readonly companyURListAllSector = `${environment.companyURListAllSector}`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getSector(): Observable<Sector[]> {\r\n    return this.http.get<Sector[]>(this.companyURListAllSector);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { User } from '../_models/user';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AuthenticationService } from '../_services/authentication.service';\r\n\r\n@Component({ templateUrl: 'user-profile.component.html' })\r\nexport class UserProfileComponent implements OnInit {\r\n\r\n  loading = false;\r\n  user: User;\r\n  userFromApi: User;\r\n\r\n  constructor(\r\n      private userService: UserService,\r\n      private authenticationService: AuthenticationService\r\n  ) {\r\n    this.user = this.authenticationService.userValue;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loading = true;\r\n    this.userService.getById(this.user.id).pipe(first()).subscribe(user => {\r\n      this.loading = false;\r\n      this.userFromApi = user;\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Wallet, RequestCreateWallet } from '../../wallet/wallet.module';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { WalletService } from '../wallet.service';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n  selector: 'app-create-wallet',\r\n  templateUrl: './create-wallet.component.html'\r\n})\r\nexport class CreateWalletComponent implements OnInit {\r\n\r\n  showSpinner = false;\r\n  response: Wallet;\r\n  walletForm: FormGroup;\r\n\r\n  request: RequestCreateWallet = {\r\n  modality: '',\r\n  amount: '',\r\n  situation: '',\r\n  purchaseData: '',\r\n  saleDate: '',\r\n  actionValueDay: '',\r\n  priceAction: '',\r\n  brokerage: [],\r\n  action: [],\r\n  userEntity: [],\r\n  }\r\n\r\n  constructor(private walletService: WalletService,\r\n              private formBuilder: FormBuilder,\r\n              private router: Router) { }\r\n\r\n  gerarForm() {\r\n    this.walletForm = this.formBuilder.group({\r\n      modality: [null],\r\n      amount: [null],\r\n      situation: [null],\r\n      purchaseData: [null],\r\n      saleDate: [null],\r\n      actionValueDay: [null],\r\n      priceAction: [null],\r\n      brokerage: [null],\r\n      action: [null],\r\n      userEntity: [null]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.gerarForm();\r\n    this.showSpinner = true;\r\n  }\r\n\r\n  save() {\r\n    this.walletService.createWallet(this.request)\r\n        .subscribe(\r\n            data => {\r\n              this.showNotificationSucesso();\r\n              this.limpa();\r\n            },\r\n            err => {\r\n              this.showNotificationErro();\r\n            })\r\n  }\r\n\r\n  limpa() {\r\n    this.walletForm.reset();\r\n  }\r\n\r\n  showNotificationSucesso() {\r\n\r\n    const type = ['', 'info', 'success', 'warning', 'danger'];\r\n    const color = Math.floor((Math.random() * 4) + 1);\r\n\r\n    $.notify({\r\n      icon: 'notifications',\r\n      message: 'Cadastrado com Sucesso <b></b>'\r\n    }, {\r\n      type: type[color],\r\n      timer: 4000,\r\n      placement: {},\r\n      template: '<div data-notify=\"container\" class=\"col-xl-4 col-lg-4 col-11 col-sm-4 col-md-4 alert alert-{0} alert-with-icon\" role=\"alert\">' +\r\n          '<button mat-button  type=\"button\" aria-hidden=\"true\" class=\"close mat-button\" data-notify=\"dismiss\">  <i class=\"material-icons\">close</i></button>' +\r\n          '<i class=\"material-icons\" data-notify=\"icon\">notifications</i> ' +\r\n          '<span data-notify=\"title\">{1}</span> ' +\r\n          '<span data-notify=\"message\">{2}</span>' +\r\n          '<div class=\"progress\" data-notify=\"progressbar\">' +\r\n          '<div class=\"progress-bar progress-bar-{0}\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 0%;\"></div>' +\r\n          '</div>' +\r\n          '<a href=\"{3}\" target=\"{4}\" data-notify=\"url\"></a>' +\r\n          '</div>'\r\n    });\r\n\r\n  }\r\n\r\n  showNotificationErro() {\r\n\r\n    const type = ['', 'info', 'success', 'warning', 'danger'];\r\n    const color = Math.floor((Math.random() * 4) + 1);\r\n\r\n    $.notify({\r\n      icon: 'notifications',\r\n      message: 'Servidor Retornou ERRO !<b></b>'\r\n    }, {\r\n      type: type[color],\r\n      timer: 4000,\r\n      placement: {},\r\n      template: '<div data-notify=\"container\" class=\"col-xl-4 col-lg-4 col-11 col-sm-4 col-md-4 alert alert-{0} alert-with-icon\" role=\"alert\">' +\r\n          '<button mat-button  type=\"button\" aria-hidden=\"true\" class=\"close mat-button\" data-notify=\"dismiss\">  <i class=\"material-icons\">close</i></button>' +\r\n          '<i class=\"material-icons\" data-notify=\"icon\">notifications</i> ' +\r\n          '<span data-notify=\"title\">{1}</span> ' +\r\n          '<span data-notify=\"message\">{2}</span>' +\r\n          '<div class=\"progress\" data-notify=\"progressbar\">' +\r\n          '<div class=\"progress-bar progress-bar-{0}\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 0%;\"></div>' +\r\n          '</div>' +\r\n          '<a href=\"{3}\" target=\"{4}\" data-notify=\"url\"></a>' +\r\n          '</div>'\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-edit-wallet',\r\n  templateUrl: './edit-wallet.component.html'\r\n})\r\nexport class EditWalletComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Wallet } from './wallet.module';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { WalletService } from './wallet.service';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n  selector: 'app-wallet',\r\n  templateUrl: './wallet.component.html'\r\n})\r\nexport class WalletComponent implements OnInit {\r\n\r\n  showSpinner = false;\r\n  responseWallet: Wallet;\r\n  results$;\r\n  queryField = new FormControl();\r\n  texto = '';\r\n\r\n  mudaTermo() {\r\n    this.texto = this.queryField.value;\r\n  }\r\n\r\n  constructor(\r\n      private walletService: WalletService,\r\n      private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n    this.showSpinner = true;\r\n    this.walletService.getWallet().subscribe(\r\n        res => this.responseWallet = res\r\n    );\r\n    if (this.results$ == null) {\r\n      setTimeout(() => {\r\n        this.showSpinner = false;\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  onSearch = () => {\r\n    let value = this.queryField.value;\r\n    if (value && (value = value.trim()) !== '') {\r\n      this.showSpinner = true;\r\n      this.results$ = this.http\r\n          .get(this.walletService.walletURLfindName + value)\r\n          .pipe(\r\n              tap((res: string) => res),\r\n              map((res: string) => res)\r\n          );\r\n      this.showSpinner = false;\r\n      this.showNotificatioSearch();\r\n    }\r\n  };\r\n\r\n  showNotificatioSearch() {\r\n    const type = ['', 'info', 'success', 'warning', 'danger'];\r\n\r\n    const color = Math.floor((Math.random() * 4) + 1);\r\n\r\n    $.notify({\r\n      icon: 'notifications',\r\n      message: 'Busca Finlizada !<b></b>'\r\n    }, {\r\n      type: type[color],\r\n      timer: 4000,\r\n      placement: {},\r\n      template: '<div data-notify=\"container\" class=\"col-xl-4 col-lg-4 col-11 col-sm-4 col-md-4 alert alert-{0} alert-with-icon\" role=\"alert\">' +\r\n          '<button mat-button  type=\"button\" aria-hidden=\"true\" class=\"close mat-button\" data-notify=\"dismiss\">  <i class=\"material-icons\">close</i></button>' +\r\n          '<i class=\"material-icons\" data-notify=\"icon\">notifications</i> ' +\r\n          '<span data-notify=\"title\">{1}</span> ' +\r\n          '<span data-notify=\"message\">{2}</span>' +\r\n          '<div class=\"progress\" data-notify=\"progressbar\">' +\r\n          '<div class=\"progress-bar progress-bar-{0}\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 0%;\"></div>' +\r\n          '</div>' +\r\n          '<a href=\"{3}\" target=\"{4}\" data-notify=\"url\"></a>' +\r\n          '</div>'\r\n    });\r\n  }\r\n\r\n  showNotificationLista(from, align) {\r\n    const type = ['', 'info', 'success', 'warning', 'danger'];\r\n\r\n    const color = Math.floor((Math.random() * 4) + 1);\r\n\r\n    $.notify({\r\n      icon: 'notifications',\r\n      message: 'Buscando no Servidor ... <b>MultBroker</b>'\r\n\r\n    }, {\r\n      type: type[color],\r\n      timer: 4000,\r\n      placement: {\r\n        from: from,\r\n        align: align\r\n      },\r\n      template: '<div data-notify=\"container\" class=\"col-xl-4 col-lg-4 col-11 col-sm-4 col-md-4 alert alert-{0} alert-with-icon\" role=\"alert\">' +\r\n          '<button mat-button  type=\"button\" aria-hidden=\"true\" class=\"close mat-button\" data-notify=\"dismiss\">  <i class=\"material-icons\">close</i></button>' +\r\n          '<i class=\"material-icons\" data-notify=\"icon\">notifications</i> ' +\r\n          '<span data-notify=\"title\">{1}</span> ' +\r\n          '<span data-notify=\"message\">{2}</span>' +\r\n          '<div class=\"progress\" data-notify=\"progressbar\">' +\r\n          '<div class=\"progress-bar progress-bar-{0}\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 0%;\"></div>' +\r\n          '</div>' +\r\n          '<a href=\"{3}\" target=\"{4}\" data-notify=\"url\"></a>' +\r\n          '</div>'\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { RequestCreateWallet, Wallet } from './wallet.module';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WalletService {\r\n\r\n  public readonly walletURListAll = `${environment.walletURListAll}`;\r\n  public readonly walletURLfindName    = `${environment.walletURLfindName}`;\r\n  public readonly walletURLfindId    = `${environment.walletURLfindId}`;\r\n  public readonly walletURLInsert    = `${environment.walletURLInsert}`;\r\n  public readonly walletURLPut = `${environment.walletURLPut}`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getWallet(): Observable<Wallet> {\r\n    return this.http.get<Wallet>(this.walletURListAll);\r\n  }\r\n\r\n  get(id) {\r\n    return this.http.get(`${this.walletURLfindId}${id}`);\r\n  }\r\n\r\n  createWallet(request: RequestCreateWallet): Observable<Wallet> {\r\n    return this.http.post<Wallet>(this.walletURLInsert, request);\r\n  }\r\n\r\n  update(id, data) {\r\n    return this.http.put(`${this.walletURLPut}${id}`, data);\r\n  }\r\n}\r\n","export const environment = {\r\n  production: true,\r\n  /*BROKERAGES   φ = '1,61803398874988'; */\r\n  brokeragesURLInsert: 'http://177.47.18.202/zuul/brokerages/brokerages/',\r\n  brokeragesURLListarTodos: 'http://177.47.18.202/zuul/brokerages/brokerages/ListaTodos/',\r\n  brokeragesURLpainel: 'http://177.47.18.202/zuul//brokerages/brokerages/painel',\r\n  brokeragesURLfindName: 'http://177.47.18.202/zuul/brokerages/brokerages/findbyname/',\r\n  brokeragesURLfindId: 'http://177.47.18.202/zuul/brokerages/brokerages/findbyid',\r\n  brokeragesURLfindAccount: 'http://177.47.18.202/zuul/brokerages/brokerages/findaccountsbyuser/',\r\n  brokeragesURLPut: 'http://177.47.18.202/zuul/brokerages/brokerages/editar/',\r\n  brokeragesURLPutUpdate: 'http://177.47.18.202/zuul/brokerages/brokerages/update/',\r\n  brokeragesURLDelete: 'http://177.47.18.202/zuul/brokerages/brokerages/delete/',\r\n  brokeragesURLStatus: 'http://177.47.18.202/zuul/brokerages/brokerages/status/check/',\r\n  /*COMPANY*/\r\n  companyURListAll: 'http://177.47.18.202/zuul/empresa/company/allResult/',\r\n  companyURLfindName: 'http://177.47.18.202/zuul/empresa/company/findbyname/',\r\n  companyURLfindId: 'http://177.47.18.202/zuul/empresa/company/findbyid/',\r\n  companyURLInsert: 'http://177.47.18.202/zuul/empresa/company/insert',\r\n  companyURLPut: 'http://177.47.18.202/zuul/empresa/company/edit/',\r\n  companyURLPutStatus: 'http://177.47.18.202/zuul/empresa/company/edit/',\r\n  companyURListAllSector: 'http://177.47.18.202/zuul/empresa/company/allResultSector/',\r\n  /*WALLET*/\r\n  walletURListAll: 'http://177.47.18.202/zuul/wallet/wallet/all',\r\n  walletURLfindName: 'http://177.47.18.202/zuul/wallet/wallet/findbyname/',\r\n  walletURLfindId: 'http://177.47.18.202/zuul/wallet/wallet/findbyid/',\r\n  walletURLInsert: 'http://177.47.18.202/zuul/wallet/wallet/insert/',\r\n  walletURLPut: 'http://177.47.18.202/zuul/wallet/wallet/edit/',\r\n  /*LOGIN*/\r\n  walletURlPost: 'http://177.47.18.202/zuul/users/users/login/',\r\n  apiUrl: 'http://177.47.18.202/zuul/users/users/login/',\r\n  /*EMOLUMENTOS*/\r\n  emolumentosURListAll: 'http://177.47.18.202/zuul/emolumentos/emolumentos/all',\r\n  emolumentosURLfindName: 'http://177.47.18.202/zuul/emolumentos/emolumentos/findbyname/',\r\n  emolumentosURLfindId: 'http://177.47.18.202/zuul/emolumentos/emolumentos/findbyid/',\r\n  emolumentosURLInsert: 'http://177.47.18.202/zuul/emolumentos/emolumentos/insert/',\r\n  emolumentosURLPut: 'http://177.47.18.202/zuul/emolumentos/emolumentos/edit/',\r\n  /*EMOLUMENTOS*/\r\n  acoesURListAll: 'http://177.47.18.202/zuul/acoes/acoes/all',\r\n  acoesURLfindName: 'http://177.47.18.202/zuul/acoes/acoes/findbyname/',\r\n  acoesURLfindId: 'http://177.47.18.202/zuul/acoes/acoes/findbyid/',\r\n  acoesURLInsert: 'http://177.47.18.202/zuul/acoes/acoes/insert/',\r\n  acoesURLPut: 'http://177.47.18.202/zuul/acoes/acoes/edit/',\r\n};\r\n","/*!\r\n\r\n=========================================================\r\n* Material Dashboard Angular - v2.4.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-angular2\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/material-dashboard-angular2/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\nimport 'hammerjs';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n"],"sourceRoot":"webpack:///"}